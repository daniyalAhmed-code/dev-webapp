{"ast":null,"code":"/**\n * An AccountsTable column descriptor.\n *\n * @typedef {Object} AccountsTableColumns~Descriptor\n * @property {string} id\n *    a unique ID to distinguish this column from others\n * @property {string} title\n *    column title to show in the header row\n * @property {Function} render\n *    accepts an Account object, and returns content to be placed in the table\n *    cell in this column\n * @property {(Object|undefined)} ordering\n *    ordering descriptor for this column. If absent, the user cannot order on\n *    this column.\n * @property ordering.iteratee\n *    a lodash iteratee, used with `lodash.orderBy`\n * @property {(Object|undefined)} filtering\n *    filtering descriptor for this column. If absent, the user cannot filter\n *    on this column.\n * @property {string} filtering.accessor\n *    either an Account object property name, or a function which takes an\n *    Account object and returns a string, on which to filter\n */export const EmailAddress={id:'EmailAddress',title:'Email address',render:account=>account.EmailAddress,ordering:{iteratee:'EmailAddress'},filtering:{accessor:'EmailAddress'}};export const IsAdmin={id:'IsAdmin',title:'Administrator',render:account=>account.IsAdmin?'Yes':'No',ordering:{iteratee:'IsAdmin'},filtering:{accessor:'IsAdmin'}};export const DateRegistered={id:'DateRegistered',title:'Date registered',render:account=>formatDate(account.DateRegistered),ordering:{iteratee:'DateRegistered'}};export const RegistrationMethod={id:'RegistrationMethod',title:'Registration method',render:account=>account.RegistrationMethod};export const ApiKeyId={id:'ApiKeyId',title:'API key ID',render:account=>account.ApiKeyId,filtering:{accessor:'ApiKeyId'}};export const Promoter={id:'Promoter',title:'Promoter',render:_ref=>{let{PromoterUserId,PromoterEmailAddress}=_ref;return PromoterUserId?\"\".concat(PromoterEmailAddress,\" (\").concat(PromoterUserId,\")\"):'';},filtering:{accessor:_ref2=>{let{PromoterUserId,PromoterEmailAddress}=_ref2;return PromoterUserId?\"\".concat(PromoterEmailAddress,\" \").concat(PromoterUserId):'';}}};export const Inviter={id:'Inviter',title:'Inviter',render:_ref3=>{let{InviterUserId,InviterEmailAddress}=_ref3;return InviterUserId?\"\".concat(InviterEmailAddress,\" (\").concat(InviterUserId,\")\"):'';},filtering:{accessor:_ref4=>{let{InviterUserId,InviterEmailAddress}=_ref4;return InviterUserId?\"\".concat(InviterEmailAddress,\" \").concat(InviterUserId):'';}}};export const DatePromoted={id:'DatePromoted',title:'Date promoted',render:_ref5=>{let{DatePromoted}=_ref5;return DatePromoted?formatDate(DatePromoted):'';},ordering:{iteratee:'DatePromoted'}};export const DateRequested={id:'DateRequested',title:'Date requested',render:account=>formatDate(account.DateRequested),ordering:{iteratee:'DateRequested'}};export const DateInvited={id:'DateInvited',title:'Date invited',render:account=>formatDate(account.DateInvited),ordering:{iteratee:'DateInvited'}};const DATE_TIME_FORMATTER=new Intl.DateTimeFormat('default',{year:'numeric',month:'numeric',day:'numeric',hour:'numeric',minute:'numeric',second:'numeric'});const formatDate=isoDateString=>DATE_TIME_FORMATTER.format(new Date(isoDateString));","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/src/components/Admin/Accounts/AccountsTableColumns.jsx"],"names":["EmailAddress","id","title","render","account","ordering","iteratee","filtering","accessor","IsAdmin","DateRegistered","formatDate","RegistrationMethod","ApiKeyId","Promoter","PromoterUserId","PromoterEmailAddress","Inviter","InviterUserId","InviterEmailAddress","DatePromoted","DateRequested","DateInvited","DATE_TIME_FORMATTER","Intl","DateTimeFormat","year","month","day","hour","minute","second","isoDateString","format","Date"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,MAAMA,CAAAA,YAAY,CAAG,CAC1BC,EAAE,CAAE,cADsB,CAE1BC,KAAK,CAAE,eAFmB,CAG1BC,MAAM,CAAEC,OAAO,EAAIA,OAAO,CAACJ,YAHD,CAI1BK,QAAQ,CAAE,CACRC,QAAQ,CAAE,cADF,CAJgB,CAO1BC,SAAS,CAAE,CACTC,QAAQ,CAAE,cADD,CAPe,CAArB,CAYP,MAAO,MAAMC,CAAAA,OAAO,CAAG,CACrBR,EAAE,CAAE,SADiB,CAErBC,KAAK,CAAE,eAFc,CAGrBC,MAAM,CAAEC,OAAO,EAAIA,OAAO,CAACK,OAAR,CAAkB,KAAlB,CAA0B,IAHxB,CAIrBJ,QAAQ,CAAE,CACRC,QAAQ,CAAE,SADF,CAJW,CAOrBC,SAAS,CAAE,CACTC,QAAQ,CAAE,SADD,CAPU,CAAhB,CAYP,MAAO,MAAME,CAAAA,cAAc,CAAG,CAC5BT,EAAE,CAAE,gBADwB,CAE5BC,KAAK,CAAE,iBAFqB,CAG5BC,MAAM,CAAEC,OAAO,EAAIO,UAAU,CAACP,OAAO,CAACM,cAAT,CAHD,CAI5BL,QAAQ,CAAE,CACRC,QAAQ,CAAE,gBADF,CAJkB,CAAvB,CASP,MAAO,MAAMM,CAAAA,kBAAkB,CAAG,CAChCX,EAAE,CAAE,oBAD4B,CAEhCC,KAAK,CAAE,qBAFyB,CAGhCC,MAAM,CAAEC,OAAO,EAAIA,OAAO,CAACQ,kBAHK,CAA3B,CAMP,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtBZ,EAAE,CAAE,UADkB,CAEtBC,KAAK,CAAE,YAFe,CAGtBC,MAAM,CAAEC,OAAO,EAAIA,OAAO,CAACS,QAHL,CAItBN,SAAS,CAAE,CACTC,QAAQ,CAAE,UADD,CAJW,CAAjB,CASP,MAAO,MAAMM,CAAAA,QAAQ,CAAG,CACtBb,EAAE,CAAE,UADkB,CAEtBC,KAAK,CAAE,UAFe,CAGtBC,MAAM,CAAE,UAAC,CAAEY,cAAF,CAAkBC,oBAAlB,CAAD,YACND,CAAAA,cAAc,WAAMC,oBAAN,cAA+BD,cAA/B,MAAmD,EAD3D,EAHc,CAKtBR,SAAS,CAAE,CACTC,QAAQ,CAAE,WAAC,CAAEO,cAAF,CAAkBC,oBAAlB,CAAD,aACRD,CAAAA,cAAc,WAAMC,oBAAN,aAA8BD,cAA9B,EAAiD,EADvD,EADD,CALW,CAAjB,CAWP,MAAO,MAAME,CAAAA,OAAO,CAAG,CACrBhB,EAAE,CAAE,SADiB,CAErBC,KAAK,CAAE,SAFc,CAGrBC,MAAM,CAAE,WAAC,CAAEe,aAAF,CAAiBC,mBAAjB,CAAD,aACND,CAAAA,aAAa,WAAMC,mBAAN,cAA8BD,aAA9B,MAAiD,EADxD,EAHa,CAKrBX,SAAS,CAAE,CACTC,QAAQ,CAAE,WAAC,CAAEU,aAAF,CAAiBC,mBAAjB,CAAD,aACRD,CAAAA,aAAa,WAAMC,mBAAN,aAA6BD,aAA7B,EAA+C,EADpD,EADD,CALU,CAAhB,CAWP,MAAO,MAAME,CAAAA,YAAY,CAAG,CAC1BnB,EAAE,CAAE,cADsB,CAE1BC,KAAK,CAAE,eAFmB,CAG1BC,MAAM,CAAE,WAAC,CAAEiB,YAAF,CAAD,aAAuBA,CAAAA,YAAY,CAAGT,UAAU,CAACS,YAAD,CAAb,CAA8B,EAAjE,EAHkB,CAI1Bf,QAAQ,CAAE,CACRC,QAAQ,CAAE,cADF,CAJgB,CAArB,CASP,MAAO,MAAMe,CAAAA,aAAa,CAAG,CAC3BpB,EAAE,CAAE,eADuB,CAE3BC,KAAK,CAAE,gBAFoB,CAG3BC,MAAM,CAAEC,OAAO,EAAIO,UAAU,CAACP,OAAO,CAACiB,aAAT,CAHF,CAI3BhB,QAAQ,CAAE,CACRC,QAAQ,CAAE,eADF,CAJiB,CAAtB,CASP,MAAO,MAAMgB,CAAAA,WAAW,CAAG,CACzBrB,EAAE,CAAE,aADqB,CAEzBC,KAAK,CAAE,cAFkB,CAGzBC,MAAM,CAAEC,OAAO,EAAIO,UAAU,CAACP,OAAO,CAACkB,WAAT,CAHJ,CAIzBjB,QAAQ,CAAE,CACRC,QAAQ,CAAE,aADF,CAJe,CAApB,CASP,KAAMiB,CAAAA,mBAAmB,CAAG,GAAIC,CAAAA,IAAI,CAACC,cAAT,CAAwB,SAAxB,CAAmC,CAC7DC,IAAI,CAAE,SADuD,CAE7DC,KAAK,CAAE,SAFsD,CAG7DC,GAAG,CAAE,SAHwD,CAI7DC,IAAI,CAAE,SAJuD,CAK7DC,MAAM,CAAE,SALqD,CAM7DC,MAAM,CAAE,SANqD,CAAnC,CAA5B,CASA,KAAMpB,CAAAA,UAAU,CAAGqB,aAAa,EAC9BT,mBAAmB,CAACU,MAApB,CAA2B,GAAIC,CAAAA,IAAJ,CAASF,aAAT,CAA3B,CADF","sourcesContent":["/**\n * An AccountsTable column descriptor.\n *\n * @typedef {Object} AccountsTableColumns~Descriptor\n * @property {string} id\n *    a unique ID to distinguish this column from others\n * @property {string} title\n *    column title to show in the header row\n * @property {Function} render\n *    accepts an Account object, and returns content to be placed in the table\n *    cell in this column\n * @property {(Object|undefined)} ordering\n *    ordering descriptor for this column. If absent, the user cannot order on\n *    this column.\n * @property ordering.iteratee\n *    a lodash iteratee, used with `lodash.orderBy`\n * @property {(Object|undefined)} filtering\n *    filtering descriptor for this column. If absent, the user cannot filter\n *    on this column.\n * @property {string} filtering.accessor\n *    either an Account object property name, or a function which takes an\n *    Account object and returns a string, on which to filter\n */\n\nexport const EmailAddress = {\n  id: 'EmailAddress',\n  title: 'Email address',\n  render: account => account.EmailAddress,\n  ordering: {\n    iteratee: 'EmailAddress'\n  },\n  filtering: {\n    accessor: 'EmailAddress'\n  }\n}\n\nexport const IsAdmin = {\n  id: 'IsAdmin',\n  title: 'Administrator',\n  render: account => account.IsAdmin ? 'Yes' : 'No',\n  ordering: {\n    iteratee: 'IsAdmin'\n  },\n  filtering: {\n    accessor: 'IsAdmin'\n  }\n}\n\nexport const DateRegistered = {\n  id: 'DateRegistered',\n  title: 'Date registered',\n  render: account => formatDate(account.DateRegistered),\n  ordering: {\n    iteratee: 'DateRegistered'\n  }\n}\n\nexport const RegistrationMethod = {\n  id: 'RegistrationMethod',\n  title: 'Registration method',\n  render: account => account.RegistrationMethod\n}\n\nexport const ApiKeyId = {\n  id: 'ApiKeyId',\n  title: 'API key ID',\n  render: account => account.ApiKeyId,\n  filtering: {\n    accessor: 'ApiKeyId'\n  }\n}\n\nexport const Promoter = {\n  id: 'Promoter',\n  title: 'Promoter',\n  render: ({ PromoterUserId, PromoterEmailAddress }) =>\n    PromoterUserId ? `${PromoterEmailAddress} (${PromoterUserId})` : '',\n  filtering: {\n    accessor: ({ PromoterUserId, PromoterEmailAddress }) =>\n      PromoterUserId ? `${PromoterEmailAddress} ${PromoterUserId}` : ''\n  }\n}\n\nexport const Inviter = {\n  id: 'Inviter',\n  title: 'Inviter',\n  render: ({ InviterUserId, InviterEmailAddress }) =>\n    InviterUserId ? `${InviterEmailAddress} (${InviterUserId})` : '',\n  filtering: {\n    accessor: ({ InviterUserId, InviterEmailAddress }) =>\n      InviterUserId ? `${InviterEmailAddress} ${InviterUserId}` : ''\n  }\n}\n\nexport const DatePromoted = {\n  id: 'DatePromoted',\n  title: 'Date promoted',\n  render: ({ DatePromoted }) => (DatePromoted ? formatDate(DatePromoted) : ''),\n  ordering: {\n    iteratee: 'DatePromoted'\n  }\n}\n\nexport const DateRequested = {\n  id: 'DateRequested',\n  title: 'Date requested',\n  render: account => formatDate(account.DateRequested),\n  ordering: {\n    iteratee: 'DateRequested'\n  }\n}\n\nexport const DateInvited = {\n  id: 'DateInvited',\n  title: 'Date invited',\n  render: account => formatDate(account.DateInvited),\n  ordering: {\n    iteratee: 'DateInvited'\n  }\n}\n\nconst DATE_TIME_FORMATTER = new Intl.DateTimeFormat('default', {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric'\n})\n\nconst formatDate = isoDateString =>\n  DATE_TIME_FORMATTER.format(new Date(isoDateString))\n"]},"metadata":{},"sourceType":"module"}