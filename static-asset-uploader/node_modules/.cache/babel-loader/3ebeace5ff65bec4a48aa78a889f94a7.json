{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import{apiGatewayClientWithCredentials as getApiGatewayClient}from'services/api';const getAccountsWithFilter=async filter=>{const apiGatewayClient=await getApiGatewayClient();const response=await apiGatewayClient.get('/admin/accounts',undefined,undefined,{queryParams:{filter}});return response.data.accounts;};const url=function(_ref){let[first,...rest]=_ref;for(var _len=arguments.length,parts=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){parts[_key-1]=arguments[_key];}return first+parts.map((p,i)=>encodeURIComponent(p)+rest[i]).join('');};const fetch=function(method,target){let params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return getApiGatewayClient().then(apiGatewayClient=>apiGatewayClient[method](target,{},params,{})).then(response=>response.data).catch(error=>{throw error&&(error.data||error);});};export const fetchRegisteredAccounts=()=>getAccountsWithFilter('registered');export const fetchAdminAccounts=()=>getAccountsWithFilter('admin');export const fetchPendingRequestAccounts=()=>getAccountsWithFilter('pendingRequest');export const fetchPendingInviteAccounts=()=>getAccountsWithFilter('pendingInvite');export const deleteAccountByUserId=userId=>fetch('delete',url(_templateObject||(_templateObject=_taggedTemplateLiteral([\"/admin/accounts/\",\"\"])),userId));// TODO: verify if this is even correct - I suspect it should've posted to\n// `/admin/accounts/:userId/denyRequest` instead.\nexport const deleteInviteByUserId=userId=>fetch('delete',url(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"/admin/accounts/\",\"\"])),userId));export const createInviteByEmail=email=>fetch('post','/admin/accounts',{targetEmailAddress:email});export const resendInviteByEmail=email=>fetch('put','/admin/accounts/resendInvite',{targetEmailAddress:email});export const promoteAccountByUserId=userId=>fetch('put',url(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"/admin/accounts/\",\"/promoteToAdmin\"])),userId));export const approveAccountRequestByUserId=userId=>fetch('put',url(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"/admin/accounts/\",\"/approveRequest\"])),userId));export const denyAccountRequestByUserId=userId=>fetch('put',url(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"/admin/accounts/\",\"/denyRequest\"])),userId));//createUser\nexport const createUserByForm=data=>fetch(\"post\",\"/admin/accounts\",{...data});//GetUser\nexport const getCurrentUser=()=>fetch(\"get\",\"/admin/accounts/current/getUserProfile\");","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/src/services/accounts.js"],"names":["apiGatewayClientWithCredentials","getApiGatewayClient","getAccountsWithFilter","filter","apiGatewayClient","response","get","undefined","queryParams","data","accounts","url","first","rest","parts","map","p","i","encodeURIComponent","join","fetch","method","target","params","then","catch","error","fetchRegisteredAccounts","fetchAdminAccounts","fetchPendingRequestAccounts","fetchPendingInviteAccounts","deleteAccountByUserId","userId","deleteInviteByUserId","createInviteByEmail","email","targetEmailAddress","resendInviteByEmail","promoteAccountByUserId","approveAccountRequestByUserId","denyAccountRequestByUserId","createUserByForm","getCurrentUser"],"mappings":"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","sourcesContent":["import { apiGatewayClientWithCredentials as getApiGatewayClient } from 'services/api'\n\nconst getAccountsWithFilter = async filter => {\n  const apiGatewayClient = await getApiGatewayClient()\n  const response = await apiGatewayClient.get(\n    '/admin/accounts',\n    undefined,\n    undefined,\n    { queryParams: { filter } }\n  )\n  return response.data.accounts\n}\n\nconst url = ([first, ...rest], ...parts) =>\n  first + parts.map((p, i) => encodeURIComponent(p) + rest[i]).join('')\n\nconst fetch = (method, target, params = {}) =>\n  getApiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient[method](target, {}, params, {}))\n    .then(response => response.data)\n    .catch(error => { throw error && (error.data || error) })\n\n    \nexport const fetchRegisteredAccounts = () => getAccountsWithFilter('registered')\nexport const fetchAdminAccounts = () => getAccountsWithFilter('admin')\nexport const fetchPendingRequestAccounts = () => getAccountsWithFilter('pendingRequest')\nexport const fetchPendingInviteAccounts = () => getAccountsWithFilter('pendingInvite')\n\nexport const deleteAccountByUserId = userId => fetch('delete', url`/admin/accounts/${userId}`)\n// TODO: verify if this is even correct - I suspect it should've posted to\n// `/admin/accounts/:userId/denyRequest` instead.\nexport const deleteInviteByUserId = userId => fetch('delete', url`/admin/accounts/${userId}`)\nexport const createInviteByEmail = email => fetch('post', '/admin/accounts', { targetEmailAddress: email })\nexport const resendInviteByEmail = email => fetch('put', '/admin/accounts/resendInvite', { targetEmailAddress: email })\nexport const promoteAccountByUserId = userId => fetch('put', url`/admin/accounts/${userId}/promoteToAdmin`)\nexport const approveAccountRequestByUserId = userId => fetch('put', url`/admin/accounts/${userId}/approveRequest`)\nexport const denyAccountRequestByUserId = userId => fetch('put', url`/admin/accounts/${userId}/denyRequest`)\n\n//createUser\nexport const createUserByForm = (data) => fetch(\"post\", \"/admin/accounts\", { ...data })\n\n//GetUser\nexport const getCurrentUser = () => fetch(\"get\", \"/admin/accounts/current/getUserProfile\")"]},"metadata":{},"sourceType":"module"}