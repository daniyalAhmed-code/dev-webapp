{"ast":null,"code":"import React,{useCallback,useEffect,useState}from'react';import{Container,Header}from'semantic-ui-react';import*as AccountService from'services/accounts';import*as AccountsTable from'components/Admin/Accounts/AccountsTable';import*as AccountsTableColumns from'components/Admin/Accounts/AccountsTableColumns';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AdminAccounts=()=>{const[accounts,setAccounts]=useState([]);const[loading,setLoading]=useState(true);const[selectedAccount,setSelectedAccount]=useState(undefined);const refreshAccounts=()=>AccountService.fetchAdminAccounts().then(accounts=>setAccounts(accounts));// Initial load\nuseEffect(()=>{refreshAccounts().finally(()=>setLoading(false));},[]);const onSelectAccount=useCallback(account=>setSelectedAccount(account),[setSelectedAccount]);return/*#__PURE__*/_jsxs(Container,{fluid:true,style:{padding:'2em'},children:[/*#__PURE__*/_jsx(Header,{as:\"h1\",children:\"Admin accounts\"}),/*#__PURE__*/_jsx(AccountsTable.AccountsTable,{accounts:accounts,columns:[AccountsTableColumns.EmailAddress,AccountsTableColumns.DatePromoted,AccountsTableColumns.Promoter],loading:loading,selectedAccount:selectedAccount,onSelectAccount:onSelectAccount})]});};export default AdminAccounts;","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/src/pages/Admin/Accounts/AdminAccounts.jsx"],"names":["React","useCallback","useEffect","useState","Container","Header","AccountService","AccountsTable","AccountsTableColumns","AdminAccounts","accounts","setAccounts","loading","setLoading","selectedAccount","setSelectedAccount","undefined","refreshAccounts","fetchAdminAccounts","then","finally","onSelectAccount","account","padding","EmailAddress","DatePromoted","Promoter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,OAASC,SAAT,CAAoBC,MAApB,KAAkC,mBAAlC,CAEA,MAAO,GAAKC,CAAAA,cAAZ,KAAgC,mBAAhC,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,yCAA/B,CACA,MAAO,GAAKC,CAAAA,oBAAZ,KAAsC,gDAAtC,C,wFAEA,KAAMC,CAAAA,aAAa,CAAG,IAAM,CAC1B,KAAM,CAACC,QAAD,CAAWC,WAAX,EAA0BR,QAAQ,CAAC,EAAD,CAAxC,CACA,KAAM,CAACS,OAAD,CAAUC,UAAV,EAAwBV,QAAQ,CAAC,IAAD,CAAtC,CACA,KAAM,CAACW,eAAD,CAAkBC,kBAAlB,EAAwCZ,QAAQ,CAACa,SAAD,CAAtD,CAEA,KAAMC,CAAAA,eAAe,CAAG,IACtBX,cAAc,CAACY,kBAAf,GAAoCC,IAApC,CAAyCT,QAAQ,EAC/CC,WAAW,CAACD,QAAD,CADb,CADF,CAKA;AACAR,SAAS,CAAC,IAAM,CACde,eAAe,GAAGG,OAAlB,CAA0B,IAAMP,UAAU,CAAC,KAAD,CAA1C,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,KAAMQ,CAAAA,eAAe,CAAGpB,WAAW,CAACqB,OAAO,EAAIP,kBAAkB,CAACO,OAAD,CAA9B,CAAyC,CAC1EP,kBAD0E,CAAzC,CAAnC,CAIA,mBACE,MAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,KAAK,CAAE,CAAEQ,OAAO,CAAE,KAAX,CAAxB,wBACE,KAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,4BADF,cAEE,KAAC,aAAD,CAAe,aAAf,EACE,QAAQ,CAAEb,QADZ,CAEE,OAAO,CAAE,CACPF,oBAAoB,CAACgB,YADd,CAEPhB,oBAAoB,CAACiB,YAFd,CAGPjB,oBAAoB,CAACkB,QAHd,CAFX,CAOE,OAAO,CAAEd,OAPX,CAQE,eAAe,CAAEE,eARnB,CASE,eAAe,CAAEO,eATnB,EAFF,GADF,CAgBD,CAnCD,CAoCA,cAAeZ,CAAAA,aAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Container, Header } from 'semantic-ui-react'\n\nimport * as AccountService from 'services/accounts'\nimport * as AccountsTable from 'components/Admin/Accounts/AccountsTable'\nimport * as AccountsTableColumns from 'components/Admin/Accounts/AccountsTableColumns'\n\nconst AdminAccounts = () => {\n  const [accounts, setAccounts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedAccount, setSelectedAccount] = useState(undefined)\n\n  const refreshAccounts = () =>\n    AccountService.fetchAdminAccounts().then(accounts =>\n      setAccounts(accounts)\n    )\n\n  // Initial load\n  useEffect(() => {\n    refreshAccounts().finally(() => setLoading(false))\n  }, [])\n\n  const onSelectAccount = useCallback(account => setSelectedAccount(account), [\n    setSelectedAccount\n  ])\n\n  return (\n    <Container fluid style={{ padding: '2em' }}>\n      <Header as='h1'>Admin accounts</Header>\n      <AccountsTable.AccountsTable\n        accounts={accounts}\n        columns={[\n          AccountsTableColumns.EmailAddress,\n          AccountsTableColumns.DatePromoted,\n          AccountsTableColumns.Promoter\n        ]}\n        loading={loading}\n        selectedAccount={selectedAccount}\n        onSelectAccount={onSelectAccount}\n      />\n    </Container>\n  )\n}\nexport default AdminAccounts\n"]},"metadata":{},"sourceType":"module"}