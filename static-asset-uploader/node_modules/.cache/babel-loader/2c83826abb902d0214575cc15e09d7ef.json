{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport btoa from 'btoa'; // This function runs after the common function,\n// `src/execute/index.js#buildRequest`\n\nexport default function buildRequest(options, req) {\n  var spec = options.spec,\n      operation = options.operation,\n      securities = options.securities,\n      requestContentType = options.requestContentType,\n      responseContentType = options.responseContentType,\n      attachContentTypeForEmptyPayload = options.attachContentTypeForEmptyPayload; // Add securities, which are applicable\n\n  req = applySecurities({\n    request: req,\n    securities: securities,\n    operation: operation,\n    spec: spec\n  });\n\n  if (req.body || req.form || attachContentTypeForEmptyPayload) {\n    var _context, _context2; // all following conditionals are Swagger2 only\n\n\n    if (requestContentType) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (Array.isArray(operation.consumes)) {\n      var _operation$consumes = _slicedToArray(operation.consumes, 1);\n\n      req.headers['Content-Type'] = _operation$consumes[0];\n    } else if (Array.isArray(spec.consumes)) {\n      var _spec$consumes = _slicedToArray(spec.consumes, 1);\n\n      req.headers['Content-Type'] = _spec$consumes[0];\n    } else if (operation.parameters && _filterInstanceProperty(_context = operation.parameters).call(_context, function (p) {\n      return p.type === 'file';\n    }).length) {\n      req.headers['Content-Type'] = 'multipart/form-data';\n    } else if (operation.parameters && _filterInstanceProperty(_context2 = operation.parameters).call(_context2, function (p) {\n      return p.in === 'formData';\n    }).length) {\n      req.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n  } else if (requestContentType) {\n    var _context3, _context4;\n\n    var isBodyParamPresent = operation.parameters && _filterInstanceProperty(_context3 = operation.parameters).call(_context3, function (p) {\n      return p.in === 'body';\n    }).length > 0;\n    var isFormDataParamPresent = operation.parameters && _filterInstanceProperty(_context4 = operation.parameters).call(_context4, function (p) {\n      return p.in === 'formData';\n    }).length > 0;\n\n    if (isBodyParamPresent || isFormDataParamPresent) {\n      req.headers['Content-Type'] = requestContentType;\n    }\n  }\n\n  if (!responseContentType && Array.isArray(operation.produces) && operation.produces.length > 0) {\n    req.headers.accept = operation.produces.join(', ');\n  }\n\n  return req;\n} // Add security values, to operations - that declare their need on them\n\nexport function applySecurities(_ref) {\n  var request = _ref.request,\n      _ref$securities = _ref.securities,\n      securities = _ref$securities === void 0 ? {} : _ref$securities,\n      _ref$operation = _ref.operation,\n      operation = _ref$operation === void 0 ? {} : _ref$operation,\n      spec = _ref.spec;\n\n  var result = _objectSpread({}, request);\n\n  var _securities$authorize = securities.authorized,\n      authorized = _securities$authorize === void 0 ? {} : _securities$authorize,\n      _securities$specSecur = securities.specSecurity,\n      specSecurity = _securities$specSecur === void 0 ? [] : _securities$specSecur;\n  var security = operation.security || specSecurity;\n  var isAuthorized = authorized && !!_Object$keys(authorized).length;\n  var securityDef = spec.securityDefinitions;\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n\n  if (!_Object$keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n\n  security.forEach(function (securityObj) {\n    _Object$keys(securityObj).forEach(function (key) {\n      var auth = authorized[key];\n\n      if (!auth) {\n        return;\n      }\n\n      var token = auth.token;\n      var value = auth.value || auth;\n      var schema = securityDef[key];\n      var type = schema.type;\n      var tokenName = schema['x-tokenName'] || 'access_token';\n      var oauthToken = token && token[tokenName];\n      var tokenType = token && token.token_type;\n\n      if (auth) {\n        if (type === 'apiKey') {\n          var inType = schema.in === 'query' ? 'query' : 'headers';\n          result[inType] = result[inType] || {};\n          result[inType][schema.name] = value;\n        } else if (type === 'basic') {\n          if (value.header) {\n            result.headers.authorization = value.header;\n          } else {\n            var _context5;\n\n            var username = value.username || '';\n            var password = value.password || '';\n            value.base64 = btoa(_concatInstanceProperty(_context5 = \"\".concat(username, \":\")).call(_context5, password));\n            result.headers.authorization = \"Basic \".concat(value.base64);\n          }\n        } else if (type === 'oauth2' && oauthToken) {\n          var _context6;\n\n          tokenType = !tokenType || tokenType.toLowerCase() === 'bearer' ? 'Bearer' : tokenType;\n          result.headers.authorization = _concatInstanceProperty(_context6 = \"\".concat(tokenType, \" \")).call(_context6, oauthToken);\n        }\n      }\n    });\n  });\n  return result;\n}","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/node_modules/swagger-client/es/execute/swagger2/build-request.js"],"names":["_objectSpread","_slicedToArray","_filterInstanceProperty","_Object$keys","_concatInstanceProperty","btoa","buildRequest","options","req","spec","operation","securities","requestContentType","responseContentType","attachContentTypeForEmptyPayload","applySecurities","request","body","form","_context","_context2","headers","Array","isArray","consumes","_operation$consumes","_spec$consumes","parameters","call","p","type","length","in","_context3","_context4","isBodyParamPresent","isFormDataParamPresent","produces","accept","join","_ref","_ref$securities","_ref$operation","result","_securities$authorize","authorized","_securities$specSecur","specSecurity","security","isAuthorized","securityDef","securityDefinitions","query","forEach","securityObj","key","auth","token","value","schema","tokenName","oauthToken","tokenType","token_type","inType","name","header","authorization","_context5","username","password","base64","concat","_context6","toLowerCase"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime-corejs3/helpers/slicedToArray\";\nimport _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport btoa from 'btoa'; // This function runs after the common function,\n// `src/execute/index.js#buildRequest`\n\nexport default function buildRequest(options, req) {\n  var spec = options.spec,\n      operation = options.operation,\n      securities = options.securities,\n      requestContentType = options.requestContentType,\n      responseContentType = options.responseContentType,\n      attachContentTypeForEmptyPayload = options.attachContentTypeForEmptyPayload; // Add securities, which are applicable\n\n  req = applySecurities({\n    request: req,\n    securities: securities,\n    operation: operation,\n    spec: spec\n  });\n\n  if (req.body || req.form || attachContentTypeForEmptyPayload) {\n    var _context, _context2;\n\n    // all following conditionals are Swagger2 only\n    if (requestContentType) {\n      req.headers['Content-Type'] = requestContentType;\n    } else if (Array.isArray(operation.consumes)) {\n      var _operation$consumes = _slicedToArray(operation.consumes, 1);\n\n      req.headers['Content-Type'] = _operation$consumes[0];\n    } else if (Array.isArray(spec.consumes)) {\n      var _spec$consumes = _slicedToArray(spec.consumes, 1);\n\n      req.headers['Content-Type'] = _spec$consumes[0];\n    } else if (operation.parameters && _filterInstanceProperty(_context = operation.parameters).call(_context, function (p) {\n      return p.type === 'file';\n    }).length) {\n      req.headers['Content-Type'] = 'multipart/form-data';\n    } else if (operation.parameters && _filterInstanceProperty(_context2 = operation.parameters).call(_context2, function (p) {\n      return p.in === 'formData';\n    }).length) {\n      req.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n  } else if (requestContentType) {\n    var _context3, _context4;\n\n    var isBodyParamPresent = operation.parameters && _filterInstanceProperty(_context3 = operation.parameters).call(_context3, function (p) {\n      return p.in === 'body';\n    }).length > 0;\n    var isFormDataParamPresent = operation.parameters && _filterInstanceProperty(_context4 = operation.parameters).call(_context4, function (p) {\n      return p.in === 'formData';\n    }).length > 0;\n\n    if (isBodyParamPresent || isFormDataParamPresent) {\n      req.headers['Content-Type'] = requestContentType;\n    }\n  }\n\n  if (!responseContentType && Array.isArray(operation.produces) && operation.produces.length > 0) {\n    req.headers.accept = operation.produces.join(', ');\n  }\n\n  return req;\n} // Add security values, to operations - that declare their need on them\n\nexport function applySecurities(_ref) {\n  var request = _ref.request,\n      _ref$securities = _ref.securities,\n      securities = _ref$securities === void 0 ? {} : _ref$securities,\n      _ref$operation = _ref.operation,\n      operation = _ref$operation === void 0 ? {} : _ref$operation,\n      spec = _ref.spec;\n\n  var result = _objectSpread({}, request);\n\n  var _securities$authorize = securities.authorized,\n      authorized = _securities$authorize === void 0 ? {} : _securities$authorize,\n      _securities$specSecur = securities.specSecurity,\n      specSecurity = _securities$specSecur === void 0 ? [] : _securities$specSecur;\n  var security = operation.security || specSecurity;\n  var isAuthorized = authorized && !!_Object$keys(authorized).length;\n  var securityDef = spec.securityDefinitions;\n  result.headers = result.headers || {};\n  result.query = result.query || {};\n\n  if (!_Object$keys(securities).length || !isAuthorized || !security || Array.isArray(operation.security) && !operation.security.length) {\n    return request;\n  }\n\n  security.forEach(function (securityObj) {\n    _Object$keys(securityObj).forEach(function (key) {\n      var auth = authorized[key];\n\n      if (!auth) {\n        return;\n      }\n\n      var token = auth.token;\n      var value = auth.value || auth;\n      var schema = securityDef[key];\n      var type = schema.type;\n      var tokenName = schema['x-tokenName'] || 'access_token';\n      var oauthToken = token && token[tokenName];\n      var tokenType = token && token.token_type;\n\n      if (auth) {\n        if (type === 'apiKey') {\n          var inType = schema.in === 'query' ? 'query' : 'headers';\n          result[inType] = result[inType] || {};\n          result[inType][schema.name] = value;\n        } else if (type === 'basic') {\n          if (value.header) {\n            result.headers.authorization = value.header;\n          } else {\n            var _context5;\n\n            var username = value.username || '';\n            var password = value.password || '';\n            value.base64 = btoa(_concatInstanceProperty(_context5 = \"\".concat(username, \":\")).call(_context5, password));\n            result.headers.authorization = \"Basic \".concat(value.base64);\n          }\n        } else if (type === 'oauth2' && oauthToken) {\n          var _context6;\n\n          tokenType = !tokenType || tokenType.toLowerCase() === 'bearer' ? 'Bearer' : tokenType;\n          result.headers.authorization = _concatInstanceProperty(_context6 = \"\".concat(tokenType, \" \")).call(_context6, oauthToken);\n        }\n      }\n    });\n  });\n  return result;\n}"]},"metadata":{},"sourceType":"module"}