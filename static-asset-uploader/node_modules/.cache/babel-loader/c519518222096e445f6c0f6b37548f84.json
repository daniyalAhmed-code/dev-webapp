{"ast":null,"code":"import React,{useCallback,useEffect,useMemo,useState,useRef}from\"react\";import{Form,Button,Container,Header,Message,Modal}from\"semantic-ui-react\";import axios from\"axios\";import*as MessageList from\"components/MessageList\";import*as AccountService from\"services/accounts\";import*as AccountsTable from\"components/Admin/Accounts/AccountsTable\";import*as AccountsTableColumns from\"components/Admin/Accounts/AccountsTableColumns\";import{useBoolean}from\"utils/use-boolean\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PendingInvites=()=>{const[accounts,setAccounts]=useState([]);const[loading,setLoading]=useState(true);const[selectedAccount,setSelectedAccount]=useState(undefined);const[isCreateModalOpen,openCreateModal,closeCreateModal]=useBoolean(false);const[isDeleteModalOpen,openDeleteModal,closeDeleteModal]=useBoolean(false);const[messages,sendMessage]=MessageList.useMessages();const[createModalMessages,sendCreateModalMessage,clearCreateModalMessages]=MessageList.useMessages();const refreshAccounts=()=>AccountService.fetchPendingInviteAccounts().then(accounts=>setAccounts(accounts));// Initial load\nuseEffect(()=>{refreshAccounts().finally(()=>setLoading(false));},[]);const onSelectAccount=useCallback(account=>setSelectedAccount(account),[]);const onConfirmCreate=useCallback(async emailAddress=>{setLoading(true);clearCreateModalMessages();try{await AccountService.createInviteByEmail(emailAddress);}catch(error){sendCreateModalMessage(dismiss=>/*#__PURE__*/_jsx(CreateFailureMessage,{emailAddress:emailAddress,dismiss:dismiss,errorMessage:error.message}));setLoading(false);return false;}closeCreateModal();clearCreateModalMessages();sendMessage(dismiss=>/*#__PURE__*/_jsx(CreateSuccessMessage,{emailAddress:emailAddress,dismiss:dismiss}));// Don't need to wait for this\nrefreshAccounts().then(()=>setLoading(false));return true;},[sendMessage,sendCreateModalMessage,clearCreateModalMessages,closeCreateModal]);const onConfirmResend=useCallback(async()=>{setLoading(true);try{await AccountService.resendInviteByEmail(selectedAccount.EmailAddress);sendMessage(dismiss=>/*#__PURE__*/_jsx(ResendSuccessMessage,{account:selectedAccount,dismiss:dismiss}));}catch(error){sendMessage(dismiss=>/*#__PURE__*/_jsx(ResendFailureMessage,{account:selectedAccount,dismiss:dismiss}));}finally{setLoading(false);}},[sendMessage,selectedAccount]);const onConfirmDelete=useCallback(async()=>{setLoading(true);closeDeleteModal();try{await AccountService.deleteInviteByUserId(selectedAccount.UserId);sendMessage(dismiss=>/*#__PURE__*/_jsx(DeleteSuccessMessage,{account:selectedAccount,dismiss:dismiss}));await refreshAccounts();}catch(error){sendMessage(dismiss=>/*#__PURE__*/_jsx(DeleteFailureMessage,{account:selectedAccount,dismiss:dismiss,errorMessage:error.message}));}finally{setLoading(false);}},[sendMessage,selectedAccount,closeDeleteModal]);return/*#__PURE__*/_jsxs(Container,{fluid:true,style:{padding:\"2em\"},children:[/*#__PURE__*/_jsx(Header,{as:\"h1\",children:\"Pending invites\"}),/*#__PURE__*/_jsx(MessageList.MessageList,{messages:messages}),/*#__PURE__*/_jsx(AccountsTable.AccountsTable,{accounts:accounts,columns:[AccountsTableColumns.EmailAddress,AccountsTableColumns.DateInvited,AccountsTableColumns.Inviter],loading:loading,selectedAccount:selectedAccount,onSelectAccount:onSelectAccount,children:/*#__PURE__*/_jsx(TableActions,{canCreate:!loading,onClickCreate:openCreateModal,canResend:!loading&&selectedAccount,onClickResend:onConfirmResend,canDelete:!loading&&selectedAccount,onClickDelete:openDeleteModal})}),/*#__PURE__*/_jsx(CreateInviteModal,{onConfirm:onConfirmCreate,open:isCreateModalOpen,onClose:closeCreateModal,messages:createModalMessages}),/*#__PURE__*/_jsx(DeleteInviteModal,{account:selectedAccount,onConfirm:onConfirmDelete,open:isDeleteModalOpen,onClose:closeDeleteModal})]});};export default PendingInvites;const TableActions=_ref=>{let{canCreate,onClickCreate,canResend,onClickResend,canDelete,onClickDelete}=_ref;return/*#__PURE__*/_jsxs(Button.Group,{children:[/*#__PURE__*/_jsx(Button,{content:\"Create user...\",disabled:!canCreate,onClick:onClickCreate}),/*#__PURE__*/_jsx(Button,{content:\"Resend\",disabled:!canResend,onClick:onClickResend}),/*#__PURE__*/_jsx(Button,{content:\"Delete\",disabled:!canDelete,onClick:onClickDelete})]});};// Pulled from https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type%3Demail) and\n// optimized in a few ways for size:\n// - Classes of `[A-Za-z0-9]` were shortened to the equivalent `[^_\\W]`.\n// - Other instances of `0-9` in classes were converted to the shorthand `\\d`.\n// - The whole regexp was made case-insensitive to avoid the need for `A-Za-z` in classes.\n// - As we're only testing, I replaced all the non-capturing groups with capturing ones.\nconst validEmailRegex=/^[\\w.!#$%&'*+/=?^`{|}~-]+@[^_\\W]([a-z\\d-]{0,61}[^_\\W])?(\\.[^_\\W]([a-z\\d-]{0,61}[^_\\W])?)*$/i;const mnoLocationOptions=[{key:\"Cz\",text:\"Czech Republic\",value:\"Czech_Republic\"},{key:\"Gr\",text:\"Greece\",value:\"Greece\"},{key:\"Hg\",text:\"Hungary\",value:\"Hungary\"},{key:\"It\",text:\"Italy\",value:\"Italy\"},{key:\"Pt\",text:\"Portugal\",value:\"Portugal\"},{key:\"Rm\",text:\"Romania\",value:\"Romania\"},{key:\"Sp\",text:\"Spain\",value:\"Spain\"},{key:\"Uk\",text:\"United Kingdom\",value:\"United_Kingdom\"}];const mnoOptions=[{key:\"Ot\",text:\"One Telecommunications\",value:\"One Telecommunications\"},{key:\"Or\",text:\"Orange\",value:\"Orange\"},{key:\"Te\",text:\"Telefónica\",value:\"Telefónica\"},{key:\"Vd\",text:\"Vodafone\",value:\"Vodafone\"}];/*\n * Note: `onConfirm` should return a boolean indicating whether the creation\n * succeeded.\n */const CreateInviteModal=_ref2=>{let{onConfirm,open,onClose,messages}=_ref2;const[email,setEmail]=useState(\"\");const[loading,setLoading]=useState(false);const isEmailValid=useMemo(()=>validEmailRegex.test(email),[email]);const onChangeEmailAddress=useCallback((_event,_ref3)=>{let{value}=_ref3;return setEmail(value);},[]);// const onClickCreate = useCallback(async () => {\n//   setLoading(true)\n//   try {\n//     if (await onConfirm(email)) {\n//       setEmail('')\n//     }\n//   } finally {\n//     setLoading(false)\n//   }\n// }, [onConfirm, email])\n// If the user stops typing, but the email is invalid, show the invalid email message as a hint\n// for why they can't proceed. Don't make the timeout so short that it'd annoy a slow typer,\n// though.\nconst[needsAssistance,setNeedsAssistance]=useState(false);const emailEverSet=useRef(false);useEffect(()=>{if(email)emailEverSet.current=true;if(isEmailValid){setNeedsAssistance(false);}else if(!needsAssistance&&emailEverSet.current){const timer=setTimeout(()=>{setNeedsAssistance(true);},3000/* ms */);return()=>{clearTimeout(timer);};}},[email,needsAssistance,isEmailValid]);// state for callBackUrl\nconst[formImages,setFormImages]=useState({profileImage:\"\",AuthCertificate:\"\"});const[authType,setAuthType]=useState(\"\");const[values,setValues]=useState({type:\"\",targetEmailAddress:\"\",targetPhoneNumber:\"\",targetFirstName:\"\",targetLastName:\"\",targetApiKeyDuration:\"\",targetMnoLocation:\"\",targetCallBackAuth:\"\",targetMno:\"\",targetMfa:\"\",targetCallBackUrl:\"\"});//state for Api Response\nconst[apiResponse,setApiResponse]=useState({loaded:false,type:\"\",message:\"\",color:\"\"});const createUserData=data=>{let dataMfa=data.targetMfa===\"yes\"?true:false;switch(data.type){case\"apiKey\":return{type:\"apiKey\",targetEmailAddress:data.targetEmailAddress,targetPhoneNumber:data.targetPhoneNumber,targetFirstName:data.targetFirstName,targetLastName:data.targetLastName,targetApiKeyDuration:data.targetApiKeyDuration,targetMnoLocation:data.targetMnoLocation,targetCallBackAuth:data.AuthApi,targetMno:data.targetMno,targetMfa:dataMfa,targetCallBackUrl:data.targetCallBackUrl};case\"basicAuth\":return{type:\"basicAuth\",targetEmailAddress:data.targetEmailAddress,targetPhoneNumber:data.targetPhoneNumber,targetFirstName:data.targetFirstName,targetLastName:data.targetLastName,targetApiKeyDuration:data.targetApiKeyDuration,targetMnoLocation:data.targetMnoLocation,targetCallBackAuth:{username:data.AuthUsername,password:data.AuthPassword},targetMno:data.targetMno,targetMfa:dataMfa,targetCallBackUrl:data.targetCallBackUrl};case\"privateCertificate\":return{type:\"privateCertificate\",targetEmailAddress:data.targetEmailAddress,targetPhoneNumber:data.targetPhoneNumber,targetFirstName:data.targetFirstName,targetLastName:data.targetLastName,targetApiKeyDuration:data.targetApiKeyDuration,targetMnoLocation:data.targetMnoLocation,targetCallBackAuth:formImages.AuthCertificate,targetMno:data.targetMno,targetMfa:dataMfa,targetCallBackUrl:data.targetCallBackUrl};default:return null;}};//const postUrl = \"/prod/admin/accounts\";\n//const createUserAxios = (userData) => axios.post(postUrl, userData);\nconst onCreateUser=async apidata=>{try{await AccountService.createUserByForm(apidata);setApiResponse({loaded:true,type:\"success\",message:\"success: usercreated\",color:\"green\"});}catch(error){setApiResponse({loaded:true,type:\"Error\",message:error.message,color:\"red\"});}};const convertToBase64=file=>{return new Promise((resolve,reject)=>{const fileReader=new FileReader();fileReader.readAsDataURL(file);fileReader.onload=()=>{resolve(fileReader.result);};fileReader.onerror=error=>{reject(error);};});};const handleFileUpload=async e=>{const file=e.target.files[0];const name=e.target.name;const base64=await convertToBase64(file);setFormImages({...formImages,[name]:base64});};const handleAuthType=(e,_ref4)=>{let{value}=_ref4;setAuthType(value);setValues({...values,type:value});};const handleSubmit=e=>{e.preventDefault();console.log(values);console.log(createUserData(values));const data=createUserData(values);onCreateUser(data);};const handleChange=e=>{setValues({...values,[e.target.name]:e.target.value});};return/*#__PURE__*/_jsxs(Modal,{open:open,onClose:onClose,size:\"small\",children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Create User\"}),/*#__PURE__*/_jsxs(Modal.Content,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Enter the details below and select \",/*#__PURE__*/_jsx(\"strong\",{children:\"Create\"}),\" to create a new user account.\"]}),/*#__PURE__*/_jsx(MessageList.MessageList,{messages:messages}),/*#__PURE__*/_jsx(Message,{hidden:!needsAssistance||isEmailValid||loading,warning:true,children:\"Please enter a valid email address.\"}),apiResponse.loaded&&/*#__PURE__*/_jsx(Message,{color:apiResponse.color,children:apiResponse.message}),/*#__PURE__*/_jsxs(Form,{id:\"UserForm\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{widths:\"equal\",children:[/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"First Name\",type:\"text\",name:\"targetFirstName\",required:true,onChange:handleChange})]}),/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Last Name\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Last Name\",type:\"text\",name:\"targetLastName\",required:true,onChange:handleChange})]})]}),/*#__PURE__*/_jsxs(Form.Group,{widths:\"equal\",children:[/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Profile Image\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"profileImage\",accept:\"image/png, image/gif, image/jpeg\",onChange:e=>handleFileUpload(e)})]}),/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\" Enable MFA?\"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"enable mfa\",inline:\"true\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"targetMfa\",value:\"yes\",checked:values.targetMfa===\"yes\",id:\"mfa-yes\",onChange:handleChange}),\"Yes\"]}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"enable mfa\",inline:\"true\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"targetMfa\",value:\"no\",checked:values.targetMfa===\"no\",id:\"mfa-no\",onChange:handleChange}),\"No\"]})]})]}),/*#__PURE__*/_jsxs(Form.Group,{widths:\"equal\",children:[/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\" Phone Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number\",name:\"targetPhoneNumber\",onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\" Email Address \"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Email address\",type:\"email\",name:\"targetEmailAddress\",onChange:handleChange,pattern:\"^[\\\\w.!#$%&'*+/=?^`{|}~-]+@[^_\\\\W]([a-z\\\\d-]{0,61}[^_\\\\W])?(\\\\.[^_\\\\W]([a-z\\\\d-]{0,61}[^_\\\\W])?)*$\",required:true})]})]}),/*#__PURE__*/_jsxs(Form.Group,{widths:\"equal\",children:[/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mnoOptions\",children:\" Select MNO... \"}),/*#__PURE__*/_jsxs(\"select\",{name:\"targetMno\",id:\"mnoOptions\",onChange:handleChange,required:true,children:[/*#__PURE__*/_jsxs(\"option\",{value:\"\",children:[\" \",\"-- select MNO --\",\" \"]},\"default\"),mnoOptions.map(_ref5=>{let{key,text,value}=_ref5;return/*#__PURE__*/_jsx(\"option\",{value:value,children:text},key);})]})]}),/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mnoLocation\",children:\" Select MNO location... \"}),/*#__PURE__*/_jsxs(\"select\",{name:\"targetMnoLocation\",id:\"mnoLocation\",onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- select MNO Location --\"},\"default\"),mnoLocationOptions.map(_ref6=>{let{key,text,value}=_ref6;return/*#__PURE__*/_jsx(\"option\",{value:value,children:text},key);})]})]})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsxs(Form.Field,{width:11,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"callback\",children:\"Enter Callback URL:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"callback\",type:\"text\",placeholder:\"https://www.\",name:\"targetCallBackUrl\",onChange:handleChange,pattern:\"https?:\\\\/\\\\/(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{1,256}\\\\.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@:%_\\\\+.~#?&//=]*)\",required:true})]}),/*#__PURE__*/_jsxs(Form.Field,{width:3,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\",children:\"API Key Duration\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",max:\"90\",onChange:handleChange,placeholder:\"Enter API Key Duration\",name:\"targetApiKeyDuration\",required:true}),/*#__PURE__*/_jsx(\"span\",{inline:\"true\",children:\"Days\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{inline:true,children:[/*#__PURE__*/_jsx(\"label\",{children:\" Select Callback Auth Type\"}),/*#__PURE__*/_jsx(Form.Radio,{label:\"Api key\",value:\"apiKey\",checked:authType===\"apiKey\",onChange:handleAuthType,name:\"type\"}),/*#__PURE__*/_jsx(Form.Radio,{label:\"Basic Auth\",value:\"basicAuth\",checked:authType===\"basicAuth\",onChange:handleAuthType,name:\"type\"}),/*#__PURE__*/_jsx(Form.Radio,{label:\"Private certificate\",value:\"privateCertificate\",checked:authType===\"privateCertificate\",onChange:handleAuthType,name:\"type\"})]}),(()=>{switch(authType){case\"apiKey\":return/*#__PURE__*/_jsx(Form.Group,{widths:\"equal\",children:/*#__PURE__*/_jsx(Form.Input,{fluid:true,label:\"Auth Credential Content\",placeholder:\"Auth Credential Content\",name:\"AuthApi\",onChange:handleChange})});case\"basicAuth\":return/*#__PURE__*/_jsxs(Form.Group,{widths:\"equal\",children:[/*#__PURE__*/_jsxs(Form.Field,{fluid:\"true\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Auth username\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Auth username\",type:\"text\",name:\"AuthUsername\",onChange:handleChange})]}),/*#__PURE__*/_jsxs(Form.Field,{fluid:\"true\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Auth password\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Last Name\",type:\"password\",name:\"AuthPassword\",onChange:handleChange})]})]});case\"privateCertificate\":return/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Upload private certificate\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"AuthCertificate\",accept:\"text/*\",onChange:e=>handleFileUpload(e)})]});default:return null;}})()]})]}),/*#__PURE__*/_jsxs(Modal.Actions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{positive:true,type:\"submit\",form:\"UserForm\",children:\"Create\"})]})]});};const DeleteInviteModal=_ref7=>{let{account,onConfirm,open,onClose}=_ref7;return account?/*#__PURE__*/_jsxs(Modal,{size:\"small\",open:open,onClose:onClose,children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Confirm invite deletion\"}),/*#__PURE__*/_jsx(Modal.Content,{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Are you sure you want to delete this account invite for\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:account.EmailAddress}),\"? This action is irreversible.\"]})}),/*#__PURE__*/_jsxs(Modal.Actions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{negative:true,onClick:onConfirm,children:\"Delete\"})]})]}):null;};const CreateSuccessMessage=_ref8=>{let{emailAddress,dismiss}=_ref8;return/*#__PURE__*/_jsx(Message,{onDismiss:dismiss,positive:true,children:/*#__PURE__*/_jsxs(Message.Content,{children:[\"Sent account invite to \",/*#__PURE__*/_jsx(\"strong\",{children:emailAddress}),\".\"]})});};const CreateFailureMessage=_ref9=>{let{emailAddress,errorMessage,dismiss}=_ref9;return/*#__PURE__*/_jsx(Message,{onDismiss:dismiss,negative:true,children:/*#__PURE__*/_jsxs(Message.Content,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to send account invite to \",/*#__PURE__*/_jsx(\"strong\",{children:emailAddress}),\".\"]}),errorMessage&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error message: \",errorMessage]})]})});};const ResendSuccessMessage=_ref10=>{let{account,dismiss}=_ref10;return/*#__PURE__*/_jsx(Message,{onDismiss:dismiss,positive:true,children:/*#__PURE__*/_jsxs(Message.Content,{children:[\"Resent account invite to \",/*#__PURE__*/_jsx(\"strong\",{children:account.EmailAddress}),\".\"]})});};const ResendFailureMessage=_ref11=>{let{account,errorMessage,dismiss}=_ref11;return/*#__PURE__*/_jsx(Message,{onDismiss:dismiss,negative:true,children:/*#__PURE__*/_jsxs(Message.Content,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to resend account invite to\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:account.EmailAddress}),\".\"]}),errorMessage&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error message: \",errorMessage]})]})});};const DeleteSuccessMessage=_ref12=>{let{account,dismiss}=_ref12;return/*#__PURE__*/_jsx(Message,{onDismiss:dismiss,positive:true,children:/*#__PURE__*/_jsxs(Message.Content,{children:[\"Deleted account invite for \",/*#__PURE__*/_jsx(\"strong\",{children:account.EmailAddress}),\".\"]})});};const DeleteFailureMessage=_ref13=>{let{account,errorMessage,dismiss}=_ref13;return/*#__PURE__*/_jsx(Message,{onDismiss:dismiss,negative:true,children:/*#__PURE__*/_jsxs(Message.Content,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Failed to delete account invite for\",\" \",/*#__PURE__*/_jsx(\"strong\",{children:account.EmailAddress}),\".\"]}),errorMessage&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error message: \",errorMessage]})]})});};","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/src/pages/Admin/Accounts/PendingInvites.jsx"],"names":["React","useCallback","useEffect","useMemo","useState","useRef","Form","Button","Container","Header","Message","Modal","axios","MessageList","AccountService","AccountsTable","AccountsTableColumns","useBoolean","PendingInvites","accounts","setAccounts","loading","setLoading","selectedAccount","setSelectedAccount","undefined","isCreateModalOpen","openCreateModal","closeCreateModal","isDeleteModalOpen","openDeleteModal","closeDeleteModal","messages","sendMessage","useMessages","createModalMessages","sendCreateModalMessage","clearCreateModalMessages","refreshAccounts","fetchPendingInviteAccounts","then","finally","onSelectAccount","account","onConfirmCreate","emailAddress","createInviteByEmail","error","dismiss","message","onConfirmResend","resendInviteByEmail","EmailAddress","onConfirmDelete","deleteInviteByUserId","UserId","padding","DateInvited","Inviter","TableActions","canCreate","onClickCreate","canResend","onClickResend","canDelete","onClickDelete","validEmailRegex","mnoLocationOptions","key","text","value","mnoOptions","CreateInviteModal","onConfirm","open","onClose","email","setEmail","isEmailValid","test","onChangeEmailAddress","_event","needsAssistance","setNeedsAssistance","emailEverSet","current","timer","setTimeout","clearTimeout","formImages","setFormImages","profileImage","AuthCertificate","authType","setAuthType","values","setValues","type","targetEmailAddress","targetPhoneNumber","targetFirstName","targetLastName","targetApiKeyDuration","targetMnoLocation","targetCallBackAuth","targetMno","targetMfa","targetCallBackUrl","apiResponse","setApiResponse","loaded","color","createUserData","data","dataMfa","AuthApi","username","AuthUsername","password","AuthPassword","onCreateUser","apidata","createUserByForm","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","handleFileUpload","e","target","files","name","base64","handleAuthType","handleSubmit","preventDefault","console","log","handleChange","map","DeleteInviteModal","CreateSuccessMessage","CreateFailureMessage","errorMessage","ResendSuccessMessage","ResendFailureMessage","DeleteSuccessMessage","DeleteFailureMessage"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  useRef,\n} from \"react\";\nimport {\n  Form,\n  Button,\n  Container,\n  Header,\n  Message,\n  Modal,\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\n\nimport * as MessageList from \"components/MessageList\";\nimport * as AccountService from \"services/accounts\";\nimport * as AccountsTable from \"components/Admin/Accounts/AccountsTable\";\nimport * as AccountsTableColumns from \"components/Admin/Accounts/AccountsTableColumns\";\n\nimport { useBoolean } from \"utils/use-boolean\";\n\nconst PendingInvites = () => {\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedAccount, setSelectedAccount] = useState(undefined);\n  const [isCreateModalOpen, openCreateModal, closeCreateModal] =\n    useBoolean(false);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] =\n    useBoolean(false);\n  const [messages, sendMessage] = MessageList.useMessages();\n  const [\n    createModalMessages,\n    sendCreateModalMessage,\n    clearCreateModalMessages,\n  ] = MessageList.useMessages();\n\n  const refreshAccounts = () =>\n    AccountService.fetchPendingInviteAccounts().then((accounts) =>\n      setAccounts(accounts)\n    );\n\n  // Initial load\n  useEffect(() => {\n    refreshAccounts().finally(() => setLoading(false));\n  }, []);\n\n  const onSelectAccount = useCallback(\n    (account) => setSelectedAccount(account),\n    []\n  );\n\n  const onConfirmCreate = useCallback(\n    async (emailAddress) => {\n      setLoading(true);\n      clearCreateModalMessages();\n      try {\n        await AccountService.createInviteByEmail(emailAddress);\n      } catch (error) {\n        sendCreateModalMessage((dismiss) => (\n          <CreateFailureMessage\n            emailAddress={emailAddress}\n            dismiss={dismiss}\n            errorMessage={error.message}\n          />\n        ));\n        setLoading(false);\n        return false;\n      }\n      closeCreateModal();\n      clearCreateModalMessages();\n      sendMessage((dismiss) => (\n        <CreateSuccessMessage emailAddress={emailAddress} dismiss={dismiss} />\n      ));\n      // Don't need to wait for this\n      refreshAccounts().then(() => setLoading(false));\n      return true;\n    },\n    [\n      sendMessage,\n      sendCreateModalMessage,\n      clearCreateModalMessages,\n      closeCreateModal,\n    ]\n  );\n\n  const onConfirmResend = useCallback(async () => {\n    setLoading(true);\n    try {\n      await AccountService.resendInviteByEmail(selectedAccount.EmailAddress);\n      sendMessage((dismiss) => (\n        <ResendSuccessMessage account={selectedAccount} dismiss={dismiss} />\n      ));\n    } catch (error) {\n      sendMessage((dismiss) => (\n        <ResendFailureMessage account={selectedAccount} dismiss={dismiss} />\n      ));\n    } finally {\n      setLoading(false);\n    }\n  }, [sendMessage, selectedAccount]);\n\n  const onConfirmDelete = useCallback(async () => {\n    setLoading(true);\n    closeDeleteModal();\n    try {\n      await AccountService.deleteInviteByUserId(selectedAccount.UserId);\n      sendMessage((dismiss) => (\n        <DeleteSuccessMessage account={selectedAccount} dismiss={dismiss} />\n      ));\n      await refreshAccounts();\n    } catch (error) {\n      sendMessage((dismiss) => (\n        <DeleteFailureMessage\n          account={selectedAccount}\n          dismiss={dismiss}\n          errorMessage={error.message}\n        />\n      ));\n    } finally {\n      setLoading(false);\n    }\n  }, [sendMessage, selectedAccount, closeDeleteModal]);\n\n  return (\n    <Container fluid style={{ padding: \"2em\" }}>\n      <Header as=\"h1\">Pending invites</Header>\n      <MessageList.MessageList messages={messages} />\n      <AccountsTable.AccountsTable\n        accounts={accounts}\n        columns={[\n          AccountsTableColumns.EmailAddress,\n          AccountsTableColumns.DateInvited,\n          AccountsTableColumns.Inviter,\n        ]}\n        loading={loading}\n        selectedAccount={selectedAccount}\n        onSelectAccount={onSelectAccount}\n      >\n        <TableActions\n          canCreate={!loading}\n          onClickCreate={openCreateModal}\n          canResend={!loading && selectedAccount}\n          onClickResend={onConfirmResend}\n          canDelete={!loading && selectedAccount}\n          onClickDelete={openDeleteModal}\n        />\n      </AccountsTable.AccountsTable>\n      <CreateInviteModal\n        onConfirm={onConfirmCreate}\n        open={isCreateModalOpen}\n        onClose={closeCreateModal}\n        messages={createModalMessages}\n      />\n      <DeleteInviteModal\n        account={selectedAccount}\n        onConfirm={onConfirmDelete}\n        open={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n      />\n    </Container>\n  );\n};\nexport default PendingInvites;\n\nconst TableActions = ({\n  canCreate,\n  onClickCreate,\n  canResend,\n  onClickResend,\n  canDelete,\n  onClickDelete,\n}) => (\n  <Button.Group>\n    <Button\n      content=\"Create user...\"\n      disabled={!canCreate}\n      onClick={onClickCreate}\n    />\n    <Button content=\"Resend\" disabled={!canResend} onClick={onClickResend} />\n    <Button content=\"Delete\" disabled={!canDelete} onClick={onClickDelete} />\n  </Button.Group>\n);\n\n// Pulled from https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type%3Demail) and\n// optimized in a few ways for size:\n// - Classes of `[A-Za-z0-9]` were shortened to the equivalent `[^_\\W]`.\n// - Other instances of `0-9` in classes were converted to the shorthand `\\d`.\n// - The whole regexp was made case-insensitive to avoid the need for `A-Za-z` in classes.\n// - As we're only testing, I replaced all the non-capturing groups with capturing ones.\nconst validEmailRegex =\n  /^[\\w.!#$%&'*+/=?^`{|}~-]+@[^_\\W]([a-z\\d-]{0,61}[^_\\W])?(\\.[^_\\W]([a-z\\d-]{0,61}[^_\\W])?)*$/i;\n\nconst mnoLocationOptions = [\n  { key: \"Cz\", text: \"Czech Republic\", value: \"Czech_Republic\" },\n  { key: \"Gr\", text: \"Greece\", value: \"Greece\" },\n  { key: \"Hg\", text: \"Hungary\", value: \"Hungary\" },\n  { key: \"It\", text: \"Italy\", value: \"Italy\" },\n  { key: \"Pt\", text: \"Portugal\", value: \"Portugal\" },\n  { key: \"Rm\", text: \"Romania\", value: \"Romania\" },\n  { key: \"Sp\", text: \"Spain\", value: \"Spain\" },\n  { key: \"Uk\", text: \"United Kingdom\", value: \"United_Kingdom\" },\n]\n\nconst mnoOptions = [\n  {\n    key: \"Ot\",\n    text: \"One Telecommunications\",\n    value: \"One Telecommunications\",\n  },\n  { key: \"Or\", text: \"Orange\", value: \"Orange\" },\n  { key: \"Te\", text: \"Telefónica\", value: \"Telefónica\" },\n  { key: \"Vd\", text: \"Vodafone\", value: \"Vodafone\" },\n];\n\n/*\n * Note: `onConfirm` should return a boolean indicating whether the creation\n * succeeded.\n */\nconst CreateInviteModal = ({ onConfirm, open, onClose, messages }) => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const isEmailValid = useMemo(() => validEmailRegex.test(email), [email]);\n  const onChangeEmailAddress = useCallback(\n    (_event, { value }) => setEmail(value),\n    []\n  );\n  // const onClickCreate = useCallback(async () => {\n  //   setLoading(true)\n  //   try {\n  //     if (await onConfirm(email)) {\n  //       setEmail('')\n  //     }\n  //   } finally {\n  //     setLoading(false)\n  //   }\n  // }, [onConfirm, email])\n\n  // If the user stops typing, but the email is invalid, show the invalid email message as a hint\n  // for why they can't proceed. Don't make the timeout so short that it'd annoy a slow typer,\n  // though.\n  const [needsAssistance, setNeedsAssistance] = useState(false);\n  const emailEverSet = useRef(false);\n\n  useEffect(() => {\n    if (email) emailEverSet.current = true;\n    if (isEmailValid) {\n      setNeedsAssistance(false);\n    } else if (!needsAssistance && emailEverSet.current) {\n      const timer = setTimeout(() => {\n        setNeedsAssistance(true);\n      }, 3000 /* ms */);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [email, needsAssistance, isEmailValid]);\n\n  // state for callBackUrl\n  const [formImages, setFormImages] = useState({\n    profileImage: \"\",\n    AuthCertificate: \"\",\n  });\n  const [authType, setAuthType] = useState(\"\");\n  const [values, setValues] = useState({\n    type: \"\",\n    targetEmailAddress: \"\",\n    targetPhoneNumber: \"\",\n    targetFirstName: \"\",\n    targetLastName: \"\",\n    targetApiKeyDuration: \"\",\n    targetMnoLocation: \"\",\n    targetCallBackAuth: \"\",\n    targetMno: \"\",\n    targetMfa: \"\",\n    targetCallBackUrl: \"\",\n  });\n  //state for Api Response\n  const [apiResponse, setApiResponse] = useState({\n    loaded: false,\n    type: \"\",\n    message: \"\",\n    color: \"\"\n  });\n  const createUserData = (data) => {\n    let dataMfa = data.targetMfa === \"yes\" ? true : false\n    switch (data.type) {\n      case \"apiKey\":\n        return {\n          type: \"apiKey\",\n          targetEmailAddress: data.targetEmailAddress,\n          targetPhoneNumber: data.targetPhoneNumber,\n          targetFirstName: data.targetFirstName,\n          targetLastName: data.targetLastName,\n          targetApiKeyDuration: data.targetApiKeyDuration,\n          targetMnoLocation: data.targetMnoLocation,\n          targetCallBackAuth: data.AuthApi,\n          targetMno: data.targetMno,\n          targetMfa: dataMfa,\n          targetCallBackUrl: data.targetCallBackUrl,\n        };\n      case \"basicAuth\":\n        return {\n          type: \"basicAuth\",\n          targetEmailAddress: data.targetEmailAddress,\n          targetPhoneNumber: data.targetPhoneNumber,\n          targetFirstName: data.targetFirstName,\n          targetLastName: data.targetLastName,\n          targetApiKeyDuration: data.targetApiKeyDuration,\n          targetMnoLocation: data.targetMnoLocation,\n          targetCallBackAuth: {\n            username: data.AuthUsername,\n            password: data.AuthPassword,\n          },\n          targetMno: data.targetMno,\n          targetMfa: dataMfa,\n          targetCallBackUrl: data.targetCallBackUrl,\n        };\n      case \"privateCertificate\":\n        return {\n          type: \"privateCertificate\",\n          targetEmailAddress: data.targetEmailAddress,\n          targetPhoneNumber: data.targetPhoneNumber,\n          targetFirstName: data.targetFirstName,\n          targetLastName: data.targetLastName,\n          targetApiKeyDuration: data.targetApiKeyDuration,\n          targetMnoLocation: data.targetMnoLocation,\n          targetCallBackAuth: formImages.AuthCertificate,\n          targetMno: data.targetMno,\n          targetMfa: dataMfa,\n          targetCallBackUrl: data.targetCallBackUrl,\n        };\n      default:\n        return null;\n    }\n  };\n  //const postUrl = \"/prod/admin/accounts\";\n  //const createUserAxios = (userData) => axios.post(postUrl, userData);\n  const onCreateUser = async (apidata) => {\n    try {\n      await AccountService.createUserByForm(apidata);\n      setApiResponse({\n        loaded: true,\n        type: \"success\",\n        message: \"success: usercreated\",\n        color: \"green\"\n      })\n    } catch (error) {\n      setApiResponse({\n        loaded: true,\n        type: \"Error\",\n        message: error.message,\n        color: \"red\"\n      })\n    }\n  };\n\n  const convertToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      }\n      fileReader.onerror = (error) => {\n        reject(error)\n      }\n    })\n  }\n const handleFileUpload = async (e) => {\n   const file = e.target.files[0];\n   const name = e.target.name;\n   const base64 = await convertToBase64(file);\n   setFormImages({ ...formImages, [name]: base64 });\n }\n\n  const handleAuthType = (e, { value }) => {\n    setAuthType(value);\n    setValues({ ...values, type: value });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(values);\n    console.log(createUserData(values))\n    const data = createUserData(values)\n    onCreateUser(data)\n  }\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  }\n\n  return (\n    <Modal open={open} onClose={onClose} size={\"small\"}>\n      <Modal.Header>Create User</Modal.Header>\n      <Modal.Content>\n        <p>\n          Enter the details below and select <strong>Create</strong> to create a\n          new user account.\n        </p>\n        <MessageList.MessageList messages={messages} />\n        <Message hidden={!needsAssistance || isEmailValid || loading} warning>\n          Please enter a valid email address.\n        </Message>\n        {apiResponse.loaded && (\n          <Message color={apiResponse.color}>{apiResponse.message}</Message>\n        )}\n        <Form id=\"UserForm\" onSubmit={handleSubmit}>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>First Name</label>\n              <input\n                placeholder=\"First Name\"\n                type=\"text\"\n                name=\"targetFirstName\"\n                required\n                onChange={handleChange}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Last Name</label>\n              <input\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"targetLastName\"\n                required\n                onChange={handleChange}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>Profile Image</label>\n              <input\n                type=\"file\"\n                name=\"profileImage\"\n                accept=\"image/png, image/gif, image/jpeg\"\n                onChange={(e) => handleFileUpload(e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Enable MFA?</label>\n              <label htmlFor=\"enable mfa\" inline=\"true\">\n                <input\n                  type=\"radio\"\n                  name=\"targetMfa\"\n                  value=\"yes\"\n                  checked={values.targetMfa === \"yes\"}\n                  id=\"mfa-yes\"\n                  onChange={handleChange}\n                />\n                Yes\n              </label>\n              <label htmlFor=\"enable mfa\" inline=\"true\">\n                <input\n                  type=\"radio\"\n                  name=\"targetMfa\"\n                  value=\"no\"\n                  checked={values.targetMfa === \"no\"}\n                  id=\"mfa-no\"\n                  onChange={handleChange}\n                />\n                No\n              </label>\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label> Phone Number</label>\n              <input\n                type=\"tel\"\n                placeholder=\"Phone Number\"\n                name=\"targetPhoneNumber\"\n                onChange={handleChange}\n                required\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Email Address </label>\n              <input\n                placeholder=\"Email address\"\n                type=\"email\"\n                name=\"targetEmailAddress\"\n                onChange={handleChange}\n                pattern=\"^[\\w.!#$%&'*+/=?^`{|}~-]+@[^_\\W]([a-z\\d-]{0,61}[^_\\W])?(\\.[^_\\W]([a-z\\d-]{0,61}[^_\\W])?)*$\"\n                required\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label htmlFor=\"mnoOptions\"> Select MNO... </label>\n              <select\n                name=\"targetMno\"\n                id=\"mnoOptions\"\n                onChange={handleChange}\n                required\n              >\n                <option key=\"default\" value=\"\">\n                  {\" \"}\n                  -- select MNO --{\" \"}\n                </option>\n                {mnoOptions.map(({ key, text, value }) => (\n                  <option key={key} value={value}>\n                    {text}\n                  </option>\n                ))}\n              </select>\n            </Form.Field>\n\n            <Form.Field>\n              <label htmlFor=\"mnoLocation\"> Select MNO location... </label>\n              <select\n                name=\"targetMnoLocation\"\n                id=\"mnoLocation\"\n                onChange={handleChange}\n                required\n              >\n                <option key=\"default\" value=\"\">\n                  -- select MNO Location --\n                </option>\n                {mnoLocationOptions.map(({ key, text, value }) => (\n                  <option key={key} value={value}>\n                    {text}\n                  </option>\n                ))}\n              </select>\n            </Form.Field>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Field width={11}>\n              <label htmlFor=\"callback\">Enter Callback URL:</label>\n              <input\n                id=\"callback\"\n                type=\"text\"\n                placeholder=\"https://www.\"\n                name=\"targetCallBackUrl\"\n                onChange={handleChange}\n                pattern=\"https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\"\n                required\n              />\n            </Form.Field>\n            <Form.Field width={3}>\n              <label htmlFor=\"\">API Key Duration</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"90\"\n                onChange={handleChange}\n                placeholder=\"Enter API Key Duration\"\n                name=\"targetApiKeyDuration\"\n                required\n              />\n              <span inline=\"true\">Days</span>\n            </Form.Field>\n          </Form.Group>\n          <Form.Group inline>\n            <label> Select Callback Auth Type</label>\n            <Form.Radio\n              label=\"Api key\"\n              value=\"apiKey\"\n              checked={authType === \"apiKey\"}\n              onChange={handleAuthType}\n              name=\"type\"\n            />\n            <Form.Radio\n              label=\"Basic Auth\"\n              value=\"basicAuth\"\n              checked={authType === \"basicAuth\"}\n              onChange={handleAuthType}\n              name=\"type\"\n            />\n            <Form.Radio\n              label=\"Private certificate\"\n              value=\"privateCertificate\"\n              checked={authType === \"privateCertificate\"}\n              onChange={handleAuthType}\n              name=\"type\"\n            />\n          </Form.Group>\n          {(() => {\n            switch (authType) {\n              case \"apiKey\":\n                return (\n                  <Form.Group widths=\"equal\">\n                    <Form.Input\n                      fluid\n                      label=\"Auth Credential Content\"\n                      placeholder=\"Auth Credential Content\"\n                      name=\"AuthApi\"\n                      onChange={handleChange}\n                    />\n                  </Form.Group>\n                )\n              case \"basicAuth\":\n                return (\n                  <Form.Group widths=\"equal\">\n                    <Form.Field fluid=\"true\">\n                      <label>Auth username</label>\n                      <input\n                        placeholder=\"Auth username\"\n                        type=\"text\"\n                        name=\"AuthUsername\"\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n\n                    <Form.Field fluid=\"true\">\n                      <label>Auth password</label>\n                      <input\n                        placeholder=\"Last Name\"\n                        type=\"password\"\n                        name=\"AuthPassword\"\n                        onChange={handleChange}\n                      />\n                    </Form.Field>\n                  </Form.Group>\n                )\n              case \"privateCertificate\":\n                return (\n                  <Form.Field>\n                    <label>Upload private certificate</label>\n                    <input\n                      type=\"file\"\n                      name=\"AuthCertificate\"\n                      accept=\"text/*\"\n                      onChange={(e) => handleFileUpload(e)}\n                    />\n                  </Form.Field>\n                )\n              default:\n                return null\n            }\n          })()}\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button positive type=\"submit\" form=\"UserForm\">\n          Create\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n};\n\nconst DeleteInviteModal = ({ account, onConfirm, open, onClose }) =>\n  account ? (\n    <Modal size=\"small\" open={open} onClose={onClose}>\n      <Modal.Header>Confirm invite deletion</Modal.Header>\n      <Modal.Content>\n        <p>\n          Are you sure you want to delete this account invite for{\" \"}\n          <strong>{account.EmailAddress}</strong>? This action is irreversible.\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button negative onClick={onConfirm}>\n          Delete\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  ) : null;\n\nconst CreateSuccessMessage = ({ emailAddress, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Sent account invite to <strong>{emailAddress}</strong>.\n    </Message.Content>\n  </Message>\n);\n\n\nconst CreateFailureMessage = ({ emailAddress, errorMessage, dismiss }) => (\n  <Message onDismiss={dismiss} negative>\n    <Message.Content>\n      <p>\n        Failed to send account invite to <strong>{emailAddress}</strong>.\n      </p>\n      {errorMessage && <p>Error message: {errorMessage}</p>}\n    </Message.Content>\n  </Message>\n);\n\nconst ResendSuccessMessage = ({ account, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Resent account invite to <strong>{account.EmailAddress}</strong>.\n    </Message.Content>\n  </Message>\n);\n\nconst ResendFailureMessage = ({ account, errorMessage, dismiss }) => (\n  <Message onDismiss={dismiss} negative>\n    <Message.Content>\n      <p>\n        Failed to resend account invite to{\" \"}\n        <strong>{account.EmailAddress}</strong>.\n      </p>\n      {errorMessage && <p>Error message: {errorMessage}</p>}\n    </Message.Content>\n  </Message>\n);\n\nconst DeleteSuccessMessage = ({ account, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Deleted account invite for <strong>{account.EmailAddress}</strong>.\n    </Message.Content>\n  </Message>\n);\n\nconst DeleteFailureMessage = ({ account, errorMessage, dismiss }) => (\n  <Message onDismiss={dismiss} negative>\n    <Message.Content>\n      <p>\n        Failed to delete account invite for{\" \"}\n        <strong>{account.EmailAddress}</strong>.\n      </p>\n      {errorMessage && <p>Error message: {errorMessage}</p>}\n    </Message.Content>\n  </Message>\n);\n"]},"metadata":{},"sourceType":"module"}