{"ast":null,"code":"import _ from'lodash';import React,{useCallback,useEffect,useState}from'react';import{Container,Dropdown,Icon,Input,Pagination,Placeholder,Table}from'semantic-ui-react';import styles from'./AccountsTable.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";export const DEFAULT_PAGE_SIZE=10;const FILLER_ACCOUNT=Symbol('FILLER_ACCOUNT');const NO_FILTER_COLUMN=Symbol('NO_FILTER_COLUMN');const NO_FILTER_VALUE='';const NO_ORDER_COLUMN=Symbol('NO_ORDER_COLUMN');const ORDER_DIRECTIONS=[{lodashDirection:undefined,iconName:'sort'},{lodashDirection:'asc',iconName:'sort up'},{lodashDirection:'desc',iconName:'sort down'}];const nextDirectionIndex=index=>(index+1)%ORDER_DIRECTIONS.length;export const ACCOUNT_ROW_PLACEHOLDER_TESTID='accountRowPlaceholder';export const FILTER_DROPDOWN_TESTID='filterDropdown';export const ACCOUNTS_TABLE_TESTID='accountsTable';export const ACCOUNT_COLUMN_ID_DATA_ATTR='data-account-column-id';/**\n * A paginated table whose rows represent accounts.\n *\n * @param {Object} props\n * @param {Object[]} props.accounts\n *    all Account objects to display (before filtering)\n * @param {AccountsTableColumns~Descriptor[]} props.columns\n *    column descriptors\n * @param {boolean} props.loading\n *    if true, the table displays a loading state; if false, the table displays\n *    the given accounts\n * @param {Object} props.selectedAccount\n *    an Account object to highlight\n * @param onSelectAccount\n *    when the row corresponding to `account` is clicked, AccountsTable calls\n *    `onSelectAccount(account)`\n * @param children\n *    components to be placed in the actions section above the table\n */export const AccountsTable=_ref=>{let{accounts,columns,loading,selectedAccount,onSelectAccount,children:toolbarActions}=_ref;const pageSize=DEFAULT_PAGE_SIZE;const[accountsView,setAccountsView]=useState(accounts);const[activePage,setActivePage]=useState(0);const[activePageAccounts,setActivePageAccounts]=useState([...Array(pageSize)].fill(FILLER_ACCOUNT));const[filterableColumns,setFilterableColumns]=useState([]);const[filter,setFilter]=useState({column:NO_FILTER_COLUMN,value:NO_FILTER_VALUE});const[order,setOrder]=useState({column:NO_ORDER_COLUMN,directionIndex:0});/* eslint-disable brace-style */useEffect(()=>{const filterableColumns=columns.filter(column=>column.filtering);setFilterableColumns(filterableColumns);// Reset filtering state if no columns are filterable\nif(filterableColumns.length===0){setFilter({column:NO_FILTER_COLUMN,value:NO_FILTER_VALUE});}// Pick the first filterable column if one is available\nelse if(filter.column===NO_FILTER_COLUMN){setFilter(filter=>({...filter,column:filterableColumns[0]}));}// Reset filterColumn if it's no longer among the available columns\nelse if(!filterableColumns.includes(filter.column)){setFilter(filter=>({...filter,column:NO_FILTER_COLUMN}));}},[columns,filter]);/* eslint-enable brace-style */ /**\n   * Sets `accountsView` to the filtered and sorted subset of `props.accounts`.\n   */useEffect(()=>{let view=_(accounts);if(filter.value!==''&&filter.column!==NO_FILTER_COLUMN){const filterAccessor=filter.column.filtering.accessor;if(typeof filterAccessor==='string'){view=view.filter(item=>!!item[filterAccessor]&&item[filterAccessor].toString().includes(filter.value));}else if(typeof filterAccessor==='function'){view=view.filter(item=>filterAccessor(item).includes(filter.value));}else{throw new Error(\"Invalid filtering accessor on column \".concat(filter.column.id));}}if(order.column!==NO_ORDER_COLUMN){view=view.orderBy([order.column.ordering.iteratee],[ORDER_DIRECTIONS[order.directionIndex].lodashDirection]);}setAccountsView(view.value());},[accounts,filter,order]);/**\n   * Returns a page of accounts from `accountView` according to the given page\n   * number.\n   */const computeAccountsPage=useCallback(activePage=>{const start=activePage*pageSize;const pageItems=accountsView.slice(start,start+pageSize);const fillerCount=pageSize-pageItems.length;if(fillerCount){pageItems.push(...Array(fillerCount).fill(FILLER_ACCOUNT));}return pageItems;},[accountsView,pageSize]);const totalPages=Math.ceil(accountsView.length/pageSize);const onPageChange=useCallback((_event,_ref2)=>{let{activePage:newActivePage}=_ref2;// SemanticUI uses 1-indexing in Pagination. We prefer sanity.\n--newActivePage;setActivePage(newActivePage);setActivePageAccounts(computeAccountsPage(newActivePage,accountsView));onSelectAccount(undefined);},[accountsView,onSelectAccount,computeAccountsPage]);useEffect(()=>{loading||onPageChange(undefined,{activePage:1});},[accounts,loading,onPageChange]);const tableRows=_.range(pageSize).map(index=>{if(loading){return/*#__PURE__*/_jsx(LoadingAccountRow,{columnCount:columns.length},index);}const account=activePageAccounts[index];return account===FILLER_ACCOUNT?/*#__PURE__*/_jsx(FillerAccountRow,{columnCount:columns.length},index):/*#__PURE__*/_jsx(AccountRow,{account:account,columns:columns,isSelected:account===selectedAccount,onSelect:onSelectAccount},index);});const filterColumnDropdownOptions=filterableColumns.map((_ref3,index)=>{let{title,id}=_ref3;return{key:index,text:title,value:id};});const onFilterColumnDropdownChange=(_event,_ref4)=>{let{value}=_ref4;return setFilter(filter=>({...filter,column:filterableColumns.find(column=>column.id===value)||NO_FILTER_COLUMN}));};const onSearchInputChange=(_event,_ref5)=>{let{value}=_ref5;return setFilter(filter=>({...filter,value}));};const toolbar=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{float:'left',marginBottom:'1rem',paddingRight:'1rem'},children:filterableColumns.length>0&&/*#__PURE__*/_jsx(Input,{iconPosition:\"left\",icon:\"search\",placeholder:\"Search by...\",value:filter.value,onChange:onSearchInputChange,style:{maxWidth:'24em'}})}),/*#__PURE__*/_jsx(\"div\",{style:{float:'left',marginBottom:'1rem',paddingRight:'1rem'},children:/*#__PURE__*/_jsx(Dropdown,{onChange:onFilterColumnDropdownChange,options:filterColumnDropdownOptions,selection:true,value:filter.column.id,\"data-testid\":FILTER_DROPDOWN_TESTID})}),/*#__PURE__*/_jsx(\"div\",{style:{float:'right',marginBottom:'1rem'},children:toolbarActions})]});const table=/*#__PURE__*/_jsxs(Table,{selectable:!loading,\"data-testid\":ACCOUNTS_TABLE_TESTID,children:[/*#__PURE__*/_jsx(TableHeader,{columns:columns,order:order,setOrder:setOrder}),/*#__PURE__*/_jsx(Table.Body,{children:tableRows}),/*#__PURE__*/_jsx(Table.Footer,{children:/*#__PURE__*/_jsx(Table.Row,{children:/*#__PURE__*/_jsx(Table.HeaderCell,{colSpan:columns.length,children:/*#__PURE__*/_jsx(Container,{fluid:true,textAlign:\"right\",children:/*#__PURE__*/_jsx(Pagination// SemanticUI uses 1-indexing in Pagination. We prefer sanity.\n,{activePage:activePage+1,onPageChange:onPageChange,totalPages:totalPages})})})})})]});return/*#__PURE__*/_jsxs(Container,{fluid:true,children:[toolbar,table]});};const TableHeader=/*#__PURE__*/React.memo(_ref6=>{let{columns,order,setOrder}=_ref6;// Clicking on a column makes it the \"order column\". If that column was\n// already the \"order column\", cycle between order directions (none,\n// ascending, descending). Otherwise, start at the beginning of the cycle\n// (ascending).\nconst onToggleOrder=column=>()=>{const nextOrder={...order};if(column===order.column){const nextIndex=nextDirectionIndex(order.directionIndex);if(nextIndex===0){nextOrder.column=NO_ORDER_COLUMN;}nextOrder.directionIndex=nextIndex;}else{nextOrder.column=column;nextOrder.directionIndex=nextDirectionIndex(0);}setOrder(nextOrder);};const orderDirection=ORDER_DIRECTIONS[order.directionIndex];return/*#__PURE__*/_jsx(Table.Header,{children:/*#__PURE__*/_jsx(Table.Row,{className:styles.headerRow,children:columns.map((column,index)=>/*#__PURE__*/_jsxs(Table.HeaderCell,{onClick:column.ordering&&onToggleOrder(column),children:[column.title,column===order.column&&/*#__PURE__*/_jsx(Icon,{name:orderDirection.iconName}),column.ordering&&column!==order.column&&/*#__PURE__*/_jsx(Icon,{name:ORDER_DIRECTIONS[0].iconName,disabled:true})]},index))})});});const LoadingAccountRow=/*#__PURE__*/React.memo(_ref7=>{let{columnCount}=_ref7;return/*#__PURE__*/_jsx(Table.Row,{children:Array.from({length:columnCount}).map((_value,index)=>/*#__PURE__*/_jsx(Table.Cell,{children:/*#__PURE__*/_jsx(Placeholder,{\"data-testid\":ACCOUNT_ROW_PLACEHOLDER_TESTID,fluid:true,children:\"\\xA0\"})},index))});});const FillerAccountRow=/*#__PURE__*/React.memo(_ref8=>{let{columnCount}=_ref8;return/*#__PURE__*/_jsx(Table.Row,{children:Array.from({length:columnCount}).map((_value,index)=>/*#__PURE__*/_jsx(Table.Cell,{children:\"\\xA0\"},index))});});const AccountRow=/*#__PURE__*/React.memo(_ref9=>{let{account,columns,isSelected,onSelect}=_ref9;return/*#__PURE__*/_jsx(Table.Row,{active:isSelected,onClick:()=>onSelect(account),children:columns.map((_ref10,index)=>{let{id,render}=_ref10;return/*#__PURE__*/_createElement(Table.Cell,{[ACCOUNT_COLUMN_ID_DATA_ATTR]:id,key:index},render(account));})});});","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/src/components/Admin/Accounts/AccountsTable.jsx"],"names":["_","React","useCallback","useEffect","useState","Container","Dropdown","Icon","Input","Pagination","Placeholder","Table","styles","DEFAULT_PAGE_SIZE","FILLER_ACCOUNT","Symbol","NO_FILTER_COLUMN","NO_FILTER_VALUE","NO_ORDER_COLUMN","ORDER_DIRECTIONS","lodashDirection","undefined","iconName","nextDirectionIndex","index","length","ACCOUNT_ROW_PLACEHOLDER_TESTID","FILTER_DROPDOWN_TESTID","ACCOUNTS_TABLE_TESTID","ACCOUNT_COLUMN_ID_DATA_ATTR","AccountsTable","accounts","columns","loading","selectedAccount","onSelectAccount","children","toolbarActions","pageSize","accountsView","setAccountsView","activePage","setActivePage","activePageAccounts","setActivePageAccounts","Array","fill","filterableColumns","setFilterableColumns","filter","setFilter","column","value","order","setOrder","directionIndex","filtering","includes","view","filterAccessor","accessor","item","toString","Error","id","orderBy","ordering","iteratee","computeAccountsPage","start","pageItems","slice","fillerCount","push","totalPages","Math","ceil","onPageChange","_event","newActivePage","tableRows","range","map","account","filterColumnDropdownOptions","title","key","text","onFilterColumnDropdownChange","find","onSearchInputChange","toolbar","float","marginBottom","paddingRight","maxWidth","table","TableHeader","memo","onToggleOrder","nextOrder","nextIndex","orderDirection","headerRow","LoadingAccountRow","columnCount","from","_value","FillerAccountRow","AccountRow","isSelected","onSelect","render"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport {\n  Container,\n  Dropdown,\n  Icon,\n  Input,\n  Pagination,\n  Placeholder,\n  Table\n} from 'semantic-ui-react'\n\nimport styles from './AccountsTable.module.css'\n\nexport const DEFAULT_PAGE_SIZE = 10\n\nconst FILLER_ACCOUNT = Symbol('FILLER_ACCOUNT')\n\nconst NO_FILTER_COLUMN = Symbol('NO_FILTER_COLUMN')\nconst NO_FILTER_VALUE = ''\nconst NO_ORDER_COLUMN = Symbol('NO_ORDER_COLUMN')\n\nconst ORDER_DIRECTIONS = [\n  {\n    lodashDirection: undefined,\n    iconName: 'sort'\n  },\n  {\n    lodashDirection: 'asc',\n    iconName: 'sort up'\n  },\n  {\n    lodashDirection: 'desc',\n    iconName: 'sort down'\n  }\n]\n\nconst nextDirectionIndex = index => (index + 1) % ORDER_DIRECTIONS.length\n\nexport const ACCOUNT_ROW_PLACEHOLDER_TESTID = 'accountRowPlaceholder'\nexport const FILTER_DROPDOWN_TESTID = 'filterDropdown'\nexport const ACCOUNTS_TABLE_TESTID = 'accountsTable'\nexport const ACCOUNT_COLUMN_ID_DATA_ATTR = 'data-account-column-id'\n\n/**\n * A paginated table whose rows represent accounts.\n *\n * @param {Object} props\n * @param {Object[]} props.accounts\n *    all Account objects to display (before filtering)\n * @param {AccountsTableColumns~Descriptor[]} props.columns\n *    column descriptors\n * @param {boolean} props.loading\n *    if true, the table displays a loading state; if false, the table displays\n *    the given accounts\n * @param {Object} props.selectedAccount\n *    an Account object to highlight\n * @param onSelectAccount\n *    when the row corresponding to `account` is clicked, AccountsTable calls\n *    `onSelectAccount(account)`\n * @param children\n *    components to be placed in the actions section above the table\n */\nexport const AccountsTable = ({\n  accounts,\n  columns,\n  loading,\n  selectedAccount,\n  onSelectAccount,\n  children: toolbarActions\n}) => {\n  const pageSize = DEFAULT_PAGE_SIZE\n\n  const [accountsView, setAccountsView] = useState(accounts)\n  const [activePage, setActivePage] = useState(0)\n  const [activePageAccounts, setActivePageAccounts] = useState(\n    [...Array(pageSize)].fill(FILLER_ACCOUNT)\n  )\n\n  const [filterableColumns, setFilterableColumns] = useState([])\n  const [filter, setFilter] = useState({\n    column: NO_FILTER_COLUMN,\n    value: NO_FILTER_VALUE\n  })\n  const [order, setOrder] = useState({\n    column: NO_ORDER_COLUMN,\n    directionIndex: 0\n  })\n\n  /* eslint-disable brace-style */\n  useEffect(() => {\n    const filterableColumns = columns.filter(column => column.filtering)\n    setFilterableColumns(filterableColumns)\n\n    // Reset filtering state if no columns are filterable\n    if (filterableColumns.length === 0) {\n      setFilter({\n        column: NO_FILTER_COLUMN,\n        value: NO_FILTER_VALUE\n      })\n    }\n\n    // Pick the first filterable column if one is available\n    else if (filter.column === NO_FILTER_COLUMN) {\n      setFilter(filter => ({ ...filter, column: filterableColumns[0] }))\n    }\n\n    // Reset filterColumn if it's no longer among the available columns\n    else if (!filterableColumns.includes(filter.column)) {\n      setFilter(filter => ({ ...filter, column: NO_FILTER_COLUMN }))\n    }\n  }, [columns, filter])\n  /* eslint-enable brace-style */\n\n  /**\n   * Sets `accountsView` to the filtered and sorted subset of `props.accounts`.\n   */\n  useEffect(() => {\n    let view = _(accounts)\n\n    if (filter.value !== '' && filter.column !== NO_FILTER_COLUMN) {\n      const filterAccessor = filter.column.filtering.accessor\n      if (typeof filterAccessor === 'string') {\n        view = view.filter(\n          item =>\n            !!item[filterAccessor] &&\n            item[filterAccessor].toString().includes(filter.value)\n        )\n      } else if (typeof filterAccessor === 'function') {\n        view = view.filter(item => filterAccessor(item).includes(filter.value))\n      } else {\n        throw new Error(\n          `Invalid filtering accessor on column ${filter.column.id}`\n        )\n      }\n    }\n\n    if (order.column !== NO_ORDER_COLUMN) {\n      view = view.orderBy(\n        [order.column.ordering.iteratee],\n        [ORDER_DIRECTIONS[order.directionIndex].lodashDirection]\n      )\n    }\n\n    setAccountsView(view.value())\n  }, [accounts, filter, order])\n\n  /**\n   * Returns a page of accounts from `accountView` according to the given page\n   * number.\n   */\n  const computeAccountsPage = useCallback(\n    activePage => {\n      const start = activePage * pageSize\n      const pageItems = accountsView.slice(start, start + pageSize)\n      const fillerCount = pageSize - pageItems.length\n      if (fillerCount) {\n        pageItems.push(...Array(fillerCount).fill(FILLER_ACCOUNT))\n      }\n      return pageItems\n    },\n    [accountsView, pageSize]\n  )\n\n  const totalPages = Math.ceil(accountsView.length / pageSize)\n\n  const onPageChange = useCallback(\n    (_event, { activePage: newActivePage }) => {\n      // SemanticUI uses 1-indexing in Pagination. We prefer sanity.\n      --newActivePage\n      setActivePage(newActivePage)\n      setActivePageAccounts(computeAccountsPage(newActivePage, accountsView))\n      onSelectAccount(undefined)\n    },\n    [accountsView, onSelectAccount, computeAccountsPage]\n  )\n\n  useEffect(() => {\n    loading || onPageChange(undefined, { activePage: 1 })\n  }, [accounts, loading, onPageChange])\n\n  const tableRows = _.range(pageSize).map(index => {\n    if (loading) {\n      return <LoadingAccountRow key={index} columnCount={columns.length} />\n    }\n\n    const account = activePageAccounts[index]\n    return account === FILLER_ACCOUNT ? (\n      <FillerAccountRow key={index} columnCount={columns.length} />\n    ) : (\n      <AccountRow\n        account={account}\n        columns={columns}\n        isSelected={account === selectedAccount}\n        onSelect={onSelectAccount}\n        key={index}\n      />\n    )\n  })\n\n  const filterColumnDropdownOptions = filterableColumns.map(\n    ({ title, id }, index) => ({ key: index, text: title, value: id })\n  )\n\n  const onFilterColumnDropdownChange = (_event, { value }) =>\n    setFilter(filter => ({\n      ...filter,\n      column:\n        filterableColumns.find(column => column.id === value) ||\n        NO_FILTER_COLUMN\n    }))\n  const onSearchInputChange = (_event, { value }) =>\n    setFilter(filter => ({ ...filter, value }))\n\n  const toolbar = (\n    <>\n      <div\n        style={{ float: 'left', marginBottom: '1rem', paddingRight: '1rem' }}\n      >\n        {filterableColumns.length > 0 && (\n          <Input\n            iconPosition='left'\n            icon='search'\n            placeholder='Search by...'\n            value={filter.value}\n            onChange={onSearchInputChange}\n            style={{ maxWidth: '24em' }}\n          />\n        )}\n      </div>\n      <div\n        style={{ float: 'left', marginBottom: '1rem', paddingRight: '1rem' }}\n      >\n        <Dropdown\n          onChange={onFilterColumnDropdownChange}\n          options={filterColumnDropdownOptions}\n          selection\n          value={filter.column.id}\n          data-testid={FILTER_DROPDOWN_TESTID}\n        />\n      </div>\n      <div style={{ float: 'right', marginBottom: '1rem' }}>\n        {toolbarActions}\n      </div>\n    </>\n  )\n\n  const table = (\n    <Table selectable={!loading} data-testid={ACCOUNTS_TABLE_TESTID}>\n      <TableHeader columns={columns} order={order} setOrder={setOrder} />\n      <Table.Body>{tableRows}</Table.Body>\n      <Table.Footer>\n        <Table.Row>\n          <Table.HeaderCell colSpan={columns.length}>\n            <Container fluid textAlign='right'>\n              <Pagination\n                // SemanticUI uses 1-indexing in Pagination. We prefer sanity.\n                activePage={activePage + 1}\n                onPageChange={onPageChange}\n                totalPages={totalPages}\n              />\n            </Container>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  )\n\n  return (\n    <Container fluid>\n      {toolbar}\n      {table}\n    </Container>\n  )\n}\n\nconst TableHeader = React.memo(({ columns, order, setOrder }) => {\n  // Clicking on a column makes it the \"order column\". If that column was\n  // already the \"order column\", cycle between order directions (none,\n  // ascending, descending). Otherwise, start at the beginning of the cycle\n  // (ascending).\n  const onToggleOrder = column => () => {\n    const nextOrder = { ...order }\n\n    if (column === order.column) {\n      const nextIndex = nextDirectionIndex(order.directionIndex)\n      if (nextIndex === 0) {\n        nextOrder.column = NO_ORDER_COLUMN\n      }\n      nextOrder.directionIndex = nextIndex\n    } else {\n      nextOrder.column = column\n      nextOrder.directionIndex = nextDirectionIndex(0)\n    }\n\n    setOrder(nextOrder)\n  }\n\n  const orderDirection = ORDER_DIRECTIONS[order.directionIndex]\n  return (\n    <Table.Header>\n      <Table.Row className={styles.headerRow}>\n        {columns.map((column, index) => (\n          <Table.HeaderCell\n            key={index}\n            onClick={column.ordering && onToggleOrder(column)}\n          >\n            {column.title}\n            {column === order.column && <Icon name={orderDirection.iconName} />}\n            {column.ordering && column !== order.column && (\n              <Icon name={ORDER_DIRECTIONS[0].iconName} disabled />\n            )}\n          </Table.HeaderCell>\n        ))}\n      </Table.Row>\n    </Table.Header>\n  )\n})\n\nconst LoadingAccountRow = React.memo(({ columnCount }) => (\n  <Table.Row>\n    {Array.from({ length: columnCount }).map((_value, index) => (\n      <Table.Cell key={index}>\n        <Placeholder data-testid={ACCOUNT_ROW_PLACEHOLDER_TESTID} fluid>\n          &nbsp;\n        </Placeholder>\n      </Table.Cell>\n    ))}\n  </Table.Row>\n))\n\nconst FillerAccountRow = React.memo(({ columnCount }) => (\n  <Table.Row>\n    {Array.from({ length: columnCount }).map((_value, index) => (\n      <Table.Cell key={index}>&nbsp;</Table.Cell>\n    ))}\n  </Table.Row>\n))\n\nconst AccountRow = React.memo(({ account, columns, isSelected, onSelect }) => {\n  return (\n    <Table.Row active={isSelected} onClick={() => onSelect(account)}>\n      {columns.map(({ id, render }, index) => (\n        <Table.Cell {...{ [ACCOUNT_COLUMN_ID_DATA_ATTR]: id }} key={index}>\n          {render(account)}\n        </Table.Cell>\n      ))}\n    </Table.Row>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}