{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Dimmer,Loader}from\"semantic-ui-react\";// mobx\nimport{observer}from'mobx-react';import{Icon,Grid,Header,Modal,Button,Segment,Container}from\"semantic-ui-react\";import EditUserForm from\"../componentsNew/EditUserForm\";import{store}from\"services/state\";import _ from\"lodash\";import*as AccountService from\"services/accounts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserProfile=observer(()=>{const[open,setOpen]=useState(false);const[user,setUser]=useState({});const[keyVisible,setKeyVisible]=useState(false);const[copySuccess,setCopySuccess]=useState(false);const[allAccounts,setAllAccounts]=useState([]);const[loading,setLoading]=useState(true);const[selectedAccount,setSelectedAccount]=useState(undefined);const refreshAccounts=()=>AccountService.fetchRegisteredAccounts().then(accounts=>{setLoading(true);const userEmail=_.get(store,\"user.email\");//console.log(\"userEmail\", userEmail)\nsetAllAccounts(_.map(accounts));//console.log(\"accounts\", accounts) \naccounts.forEach(account=>{if(account.EmailAddress===userEmail){setSelectedAccount(account);//   console.log(\"store\", store)\n//   console.log(\"store email\", store.user.email)\n//   console.log(\"selectedAccount\", selectedAccount)\n}});});// Initial load\nuseEffect(()=>{refreshAccounts().finally(()=>{setLoading(false);//console.log(\"allAccounts\", allAccounts)\n});},[]);//   let userEmail = store.user.email\n//   console.log(\"all accounts\", allAccounts)\n//   user = allAccounts.find((account) => account.EmailAddress === userEmail)\n//   console.log(\"user\", user)\nconst handleKeyVisible=()=>{setKeyVisible(!keyVisible);};const handleKeyCopy=()=>{navigator.clipboard.writeText(store.apiKey);setCopySuccess(true);setTimeout(()=>{setCopySuccess(false);},2000);};//   useEffect(() => {\n//     let mounted = true\n//     getList().then((items) => {\n//       if (mounted) {\n//         setList(items)\n//       }\n//     })\n//     return () => (mounted = false)\n//   }, [])\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"div\",{style:{padding:\"20px 0 0 50px\"},children:/*#__PURE__*/_jsxs(Header,{as:\"h3\",textAlign:\"left\",children:[/*#__PURE__*/_jsx(Icon,{name:\"settings\"}),/*#__PURE__*/_jsxs(Header.Content,{children:[\"Account Settings\",/*#__PURE__*/_jsx(Header.Subheader,{children:\"Manage your preferences\"})]})]})}),loading?/*#__PURE__*/_jsx(Dimmer,{active:true,inverted:true,children:/*#__PURE__*/_jsx(Loader,{size:\"large\",children:\"Loading...\"})}):/*#__PURE__*/_jsx(Segment,{color:\"green\",children:/*#__PURE__*/_jsxs(Grid,{textAlign:\"center\",children:[/*#__PURE__*/_jsxs(Grid.Row,{children:[/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"First Name:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.FirstName?selectedAccount.FirstName:\"Fabio\"})]}),/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"Last Name:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.LastName?selectedAccount.LastName:\"Santos\"})]})]}),/*#__PURE__*/_jsxs(Grid.Row,{children:[/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"Enabled MFA:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.Mfa?selectedAccount.Mfa:\"False\"})]}),/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"Phone Number:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.PhoneNumber?selectedAccount.PhoneNumber:\"+1234567890\"})]})]}),/*#__PURE__*/_jsxs(Grid.Row,{children:[/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"Email Address:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.EmailAddress?selectedAccount.EmailAddress:\"fabio.santos@outscope.com\"})]}),/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"Key Duration:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.ApiKeyDuration?selectedAccount.ApiKeyDuration:\"90 Days\"})]})]}),/*#__PURE__*/_jsxs(Grid.Row,{children:[/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"API Key ID:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.ApiKeyId?selectedAccount.ApiKeyId:\"pibiady3nl\"})]}),/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"API Key Secret:\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:keyVisible?store.apiKey:/*#__PURE__*/_jsx(\"b\",{children:\"******************\"})}),/*#__PURE__*/_jsx(Icon,{name:\"eye slash outline\",style:{cursor:\"pointer\"},onClick:handleKeyVisible}),/*#__PURE__*/_jsx(Icon,{name:\"copy\",onClick:handleKeyCopy,style:{cursor:\"pointer\",color:\"#058052\"}}),copySuccess?/*#__PURE__*/_jsx(\"span\",{style:{color:\"#01bf71\"},children:/*#__PURE__*/_jsx(\"b\",{children:\"Success!\"})}):null]})]})]}),/*#__PURE__*/_jsxs(Grid.Row,{children:[/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"MNO:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.Mno?selectedAccount.Mno:\"Vodafone\"})]}),/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"MNO Location:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.MnoLocation?selectedAccount.MnoLocation:\"Portugal\"})]})]}),/*#__PURE__*/_jsxs(Grid.Row,{children:[/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"Callback URL\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.CallBackUrl?selectedAccount.CallBackUrl:\"https://outscope.com\"})]}),/*#__PURE__*/_jsxs(Grid.Column,{width:8,children:[/*#__PURE__*/_jsx(Header,{size:\"small\",children:\"Callback Type:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedAccount.Type?selectedAccount.Type:\"Api Key\"})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"right\"},children:/*#__PURE__*/_jsxs(Modal,{onClose:()=>setOpen(false),onOpen:()=>setOpen(true),open:open,trigger:/*#__PURE__*/_jsx(Button,{children:\"Edit Profile\"}),children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(Modal.Content,{children:[/*#__PURE__*/_jsx(Modal.Description,{children:/*#__PURE__*/_jsx(\"p\",{style:{padding:\"10px\"},children:\"You can update your Key, Phone Number, MNO options, Callback Url and other available fields.\"})}),/*#__PURE__*/_jsx(EditUserForm,{})]}),/*#__PURE__*/_jsxs(Modal.Actions,{children:[/*#__PURE__*/_jsx(Button,{color:\"black\",onClick:()=>setOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{content:\"Yes, update\",labelPosition:\"right\",icon:\"checkmark\",onClick:()=>setOpen(false),positive:true})]})]})})]})});});export default UserProfile;","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/src/pages/UserProfile.jsx"],"names":["React","useState","useEffect","useRef","Dimmer","Loader","observer","Icon","Grid","Header","Modal","Button","Segment","Container","EditUserForm","store","_","AccountService","UserProfile","open","setOpen","user","setUser","keyVisible","setKeyVisible","copySuccess","setCopySuccess","allAccounts","setAllAccounts","loading","setLoading","selectedAccount","setSelectedAccount","undefined","refreshAccounts","fetchRegisteredAccounts","then","accounts","userEmail","get","map","forEach","account","EmailAddress","finally","handleKeyVisible","handleKeyCopy","navigator","clipboard","writeText","apiKey","setTimeout","padding","FirstName","LastName","Mfa","PhoneNumber","ApiKeyDuration","ApiKeyId","cursor","color","Mno","MnoLocation","CallBackUrl","Type","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\nimport { Dimmer, Loader  } from \"semantic-ui-react\"\n// mobx\nimport { observer } from 'mobx-react'\nimport {\n  Icon,\n  Grid,\n  Header,\n  Modal,\n  Button,\n  Segment,\n  Container,\n} from \"semantic-ui-react\"\nimport EditUserForm from \"../componentsNew/EditUserForm\"\nimport { store } from \"services/state\"\nimport _ from \"lodash\"\nimport * as AccountService from \"services/accounts\"\n\nconst UserProfile = observer(() => {\n  const [open, setOpen] = useState(false)\n  const [user, setUser] = useState({})\n  const [keyVisible, setKeyVisible] = useState(false)\n  const [copySuccess, setCopySuccess] = useState(false)\n  const [allAccounts, setAllAccounts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedAccount, setSelectedAccount] = useState(undefined)\n\n  const refreshAccounts = () => \n    AccountService.fetchRegisteredAccounts().then((accounts) => {\n        setLoading(true)\n        const userEmail = _.get(store, \"user.email\")\n      //console.log(\"userEmail\", userEmail)\n      setAllAccounts(_.map(accounts))\n      //console.log(\"accounts\", accounts) \n      accounts.forEach((account) => {\n        if (account.EmailAddress === userEmail) {\n          setSelectedAccount(account)\n        //   console.log(\"store\", store)\n        //   console.log(\"store email\", store.user.email)\n        //   console.log(\"selectedAccount\", selectedAccount)\n        }\n      })\n    })\n\n\n\n  // Initial load\n  useEffect(() => {\n    refreshAccounts().finally(() => {\n        setLoading(false)\n        //console.log(\"allAccounts\", allAccounts)\n    })\n  }, [])\n//   let userEmail = store.user.email\n//   console.log(\"all accounts\", allAccounts)\n//   user = allAccounts.find((account) => account.EmailAddress === userEmail)\n//   console.log(\"user\", user)\n\n\n  const handleKeyVisible = () => {\n    setKeyVisible(!keyVisible)\n  }\n  const handleKeyCopy = () => {\n    navigator.clipboard.writeText(store.apiKey)\n    setCopySuccess(true)\n    setTimeout(() => {\n      setCopySuccess(false)\n    }, 2000)\n  }\n\n  //   useEffect(() => {\n  //     let mounted = true\n  //     getList().then((items) => {\n  //       if (mounted) {\n  //         setList(items)\n  //       }\n  //     })\n  //     return () => (mounted = false)\n  //   }, [])\n\n  return (\n    <div>\n      <Container>\n        <div style={{ padding: \"20px 0 0 50px\" }}>\n          <Header as=\"h3\" textAlign=\"left\">\n            <Icon name=\"settings\" />\n            <Header.Content>\n              Account Settings \n              <Header.Subheader>Manage your preferences</Header.Subheader>\n            \n            </Header.Content>\n          </Header>\n        </div>\n        {loading ? ( <Dimmer active inverted>\n        <Loader size='large'>Loading...</Loader>\n      </Dimmer>) : (\n        <Segment color=\"green\">\n          <Grid textAlign=\"center\">\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <Header size=\"small\">First Name:</Header>\n                <p>{selectedAccount.FirstName ? selectedAccount.FirstName : \"Fabio\"}</p>\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size=\"small\">Last Name:</Header>\n                <p>{selectedAccount.LastName ? selectedAccount.LastName : \"Santos\"}</p>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <Header size=\"small\">Enabled MFA:</Header>\n                <p>{selectedAccount.Mfa ? selectedAccount.Mfa : \"False\"}</p>\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size=\"small\">Phone Number:</Header>\n                <p>{selectedAccount.PhoneNumber ? selectedAccount.PhoneNumber : \"+1234567890\"}</p>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <Header size=\"small\">Email Address:</Header>\n                <p>{selectedAccount.EmailAddress ? selectedAccount.EmailAddress : \"fabio.santos@outscope.com\"}</p>\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size=\"small\">Key Duration:</Header>\n                <p>{selectedAccount.ApiKeyDuration? selectedAccount.ApiKeyDuration : \"90 Days\"}</p>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <Header size=\"small\">API Key ID:</Header>\n                <p>{selectedAccount.ApiKeyId? selectedAccount.ApiKeyId : \"pibiady3nl\"}</p>\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size=\"small\">API Key Secret:</Header>\n                <div>\n                  <p>{keyVisible ? store.apiKey : <b>******************</b>}</p>\n                  <Icon\n                    name=\"eye slash outline\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={handleKeyVisible}\n                  />\n                  <Icon\n                    name=\"copy\"\n                    onClick={handleKeyCopy}\n                    style={{ cursor: \"pointer\", color: \"#058052\" }}\n                  />\n                  {copySuccess ? (\n                    <span style={{ color: \"#01bf71\" }}>\n                      <b>Success!</b>\n                    </span>\n                  ) : null}\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <Header size=\"small\">MNO:</Header>\n                <p>{selectedAccount.Mno ? selectedAccount.Mno : \"Vodafone\"}</p>\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size=\"small\">MNO Location:</Header>\n                <p>{selectedAccount.MnoLocation ? selectedAccount.MnoLocation : \"Portugal\"}</p>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <Header size=\"small\">Callback URL</Header>\n                <p>{selectedAccount.CallBackUrl ? selectedAccount.CallBackUrl : \"https://outscope.com\"}</p>\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size=\"small\">Callback Type:</Header>\n                <p>{selectedAccount.Type ? selectedAccount.Type : \"Api Key\"}</p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>) }\n        <div style={{ textAlign: \"right\" }}>\n          <Modal\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            trigger={<Button>Edit Profile</Button>}\n          >\n            <Modal.Header>Edit Profile</Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <p style={{ padding: \"10px\" }}>\n                  You can update your Key, Phone Number, MNO options, Callback\n                  Url and other available fields.\n                </p>\n              </Modal.Description>\n              <EditUserForm />\n            </Modal.Content>\n            <Modal.Actions>\n              <Button color=\"black\" onClick={() => setOpen(false)}>\n                Cancel\n              </Button>\n              <Button\n                content=\"Yes, update\"\n                labelPosition=\"right\"\n                icon=\"checkmark\"\n                onClick={() => setOpen(false)}\n                positive\n              />\n            </Modal.Actions>\n          </Modal>\n        </div>\n      </Container>\n    </div>\n  )\n})\n\nexport default UserProfile\n"]},"metadata":{},"sourceType":"module"}