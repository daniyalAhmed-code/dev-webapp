{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport { eachOperation, opId } from './helpers';\n\nvar nullFn = function nullFn() {\n  return null;\n};\n\nvar normalizeArray = function normalizeArray(arg) {\n  return Array.isArray(arg) ? arg : [arg];\n}; // To allow stubbing of functions\n\n\nexport var self = {\n  mapTagOperations: mapTagOperations,\n  makeExecute: makeExecute\n}; // Make an execute, bound to arguments defined in mapTagOperation's callback (cb)\n\nexport function makeExecute() {\n  var swaggerJs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (_ref) {\n    var pathName = _ref.pathName,\n        method = _ref.method,\n        operationId = _ref.operationId;\n    return function (parameters) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var requestInterceptor = swaggerJs.requestInterceptor,\n          responseInterceptor = swaggerJs.responseInterceptor,\n          userFetch = swaggerJs.userFetch;\n      return swaggerJs.execute(_objectSpread({\n        spec: swaggerJs.spec,\n        requestInterceptor: requestInterceptor,\n        responseInterceptor: responseInterceptor,\n        userFetch: userFetch,\n        pathName: pathName,\n        method: method,\n        parameters: parameters,\n        operationId: operationId\n      }, opts));\n    };\n  };\n} // Creates an interface with tags+operations = execute\n// The shape\n// { apis: { [tag]: { operations: [operation]: { execute }}}}\n// NOTE: this is mostly for compatibility\n\nexport function makeApisTagOperationsOperationExecute() {\n  var swaggerJs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // { apis: tag: operations: execute }\n\n  var cb = self.makeExecute(swaggerJs);\n  var tagOperations = self.mapTagOperations({\n    v2OperationIdCompatibilityMode: swaggerJs.v2OperationIdCompatibilityMode,\n    spec: swaggerJs.spec,\n    cb: cb\n  });\n  var apis = {}; // eslint-disable-next-line no-restricted-syntax, guard-for-in\n\n  for (var tag in tagOperations) {\n    apis[tag] = {\n      operations: {}\n    }; // eslint-disable-next-line no-restricted-syntax, guard-for-in\n\n    for (var op in tagOperations[tag]) {\n      apis[tag].operations[op] = {\n        execute: tagOperations[tag][op]\n      };\n    }\n  }\n\n  return {\n    apis: apis\n  };\n} // .apis[tag][operationId]:ExecuteFunction interface\n\nexport function makeApisTagOperation() {\n  var swaggerJs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var cb = self.makeExecute(swaggerJs);\n  return {\n    apis: self.mapTagOperations({\n      v2OperationIdCompatibilityMode: swaggerJs.v2OperationIdCompatibilityMode,\n      spec: swaggerJs.spec,\n      cb: cb\n    })\n  };\n}\n/**\n * Iterates over a spec, creating a hash of {[tag]: { [operationId], ... }, ...}\n * with the value of calling `cb`.\n *\n * `spec` is a OAI v2.0 compliant specification object\n * `cb` is called with ({ spec, operation, path, method })\n * `defaultTag` will house all non-tagged operations\n *\n */\n\nexport function mapTagOperations(_ref2) {\n  var spec = _ref2.spec,\n      _ref2$cb = _ref2.cb,\n      cb = _ref2$cb === void 0 ? nullFn : _ref2$cb,\n      _ref2$defaultTag = _ref2.defaultTag,\n      defaultTag = _ref2$defaultTag === void 0 ? 'default' : _ref2$defaultTag,\n      v2OperationIdCompatibilityMode = _ref2.v2OperationIdCompatibilityMode;\n  var operationIdCounter = {};\n  var tagOperations = {}; // Will house all tags + operations\n\n  eachOperation(spec, function (_ref3) {\n    var pathName = _ref3.pathName,\n        method = _ref3.method,\n        operation = _ref3.operation;\n    var tags = operation.tags ? normalizeArray(operation.tags) : [defaultTag];\n    tags.forEach(function (tag) {\n      if (typeof tag !== 'string') {\n        return;\n      }\n\n      tagOperations[tag] = tagOperations[tag] || {};\n      var tagObj = tagOperations[tag];\n      var id = opId(operation, pathName, method, {\n        v2OperationIdCompatibilityMode: v2OperationIdCompatibilityMode\n      });\n      var cbResult = cb({\n        spec: spec,\n        pathName: pathName,\n        method: method,\n        operation: operation,\n        operationId: id\n      });\n\n      if (operationIdCounter[id]) {\n        var _context;\n\n        operationIdCounter[id] += 1;\n        tagObj[_concatInstanceProperty(_context = \"\".concat(id)).call(_context, operationIdCounter[id])] = cbResult;\n      } else if (typeof tagObj[id] !== 'undefined') {\n        var _context2, _context3; // Bump counter ( for this operationId )\n\n\n        var originalCounterValue = operationIdCounter[id] || 1;\n        operationIdCounter[id] = originalCounterValue + 1; // Append _x to the operationId\n\n        tagObj[_concatInstanceProperty(_context2 = \"\".concat(id)).call(_context2, operationIdCounter[id])] = cbResult; // Rename the first operationId\n\n        var temp = tagObj[id];\n        delete tagObj[id];\n        tagObj[_concatInstanceProperty(_context3 = \"\".concat(id)).call(_context3, originalCounterValue)] = temp;\n      } else {\n        // Assign callback result ( usually a bound function )\n        tagObj[id] = cbResult;\n      }\n    });\n  });\n  return tagOperations;\n}","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/node_modules/swagger-client/es/interfaces.js"],"names":["_objectSpread","_concatInstanceProperty","eachOperation","opId","nullFn","normalizeArray","arg","Array","isArray","self","mapTagOperations","makeExecute","swaggerJs","arguments","length","undefined","_ref","pathName","method","operationId","parameters","opts","requestInterceptor","responseInterceptor","userFetch","execute","spec","makeApisTagOperationsOperationExecute","cb","tagOperations","v2OperationIdCompatibilityMode","apis","tag","operations","op","makeApisTagOperation","_ref2","_ref2$cb","_ref2$defaultTag","defaultTag","operationIdCounter","_ref3","operation","tags","forEach","tagObj","id","cbResult","_context","concat","call","_context2","_context3","originalCounterValue","temp"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport { eachOperation, opId } from './helpers';\n\nvar nullFn = function nullFn() {\n  return null;\n};\n\nvar normalizeArray = function normalizeArray(arg) {\n  return Array.isArray(arg) ? arg : [arg];\n}; // To allow stubbing of functions\n\n\nexport var self = {\n  mapTagOperations: mapTagOperations,\n  makeExecute: makeExecute\n}; // Make an execute, bound to arguments defined in mapTagOperation's callback (cb)\n\nexport function makeExecute() {\n  var swaggerJs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (_ref) {\n    var pathName = _ref.pathName,\n        method = _ref.method,\n        operationId = _ref.operationId;\n    return function (parameters) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var requestInterceptor = swaggerJs.requestInterceptor,\n          responseInterceptor = swaggerJs.responseInterceptor,\n          userFetch = swaggerJs.userFetch;\n      return swaggerJs.execute(_objectSpread({\n        spec: swaggerJs.spec,\n        requestInterceptor: requestInterceptor,\n        responseInterceptor: responseInterceptor,\n        userFetch: userFetch,\n        pathName: pathName,\n        method: method,\n        parameters: parameters,\n        operationId: operationId\n      }, opts));\n    };\n  };\n} // Creates an interface with tags+operations = execute\n// The shape\n// { apis: { [tag]: { operations: [operation]: { execute }}}}\n// NOTE: this is mostly for compatibility\n\nexport function makeApisTagOperationsOperationExecute() {\n  var swaggerJs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // { apis: tag: operations: execute }\n  var cb = self.makeExecute(swaggerJs);\n  var tagOperations = self.mapTagOperations({\n    v2OperationIdCompatibilityMode: swaggerJs.v2OperationIdCompatibilityMode,\n    spec: swaggerJs.spec,\n    cb: cb\n  });\n  var apis = {}; // eslint-disable-next-line no-restricted-syntax, guard-for-in\n\n  for (var tag in tagOperations) {\n    apis[tag] = {\n      operations: {}\n    }; // eslint-disable-next-line no-restricted-syntax, guard-for-in\n\n    for (var op in tagOperations[tag]) {\n      apis[tag].operations[op] = {\n        execute: tagOperations[tag][op]\n      };\n    }\n  }\n\n  return {\n    apis: apis\n  };\n} // .apis[tag][operationId]:ExecuteFunction interface\n\nexport function makeApisTagOperation() {\n  var swaggerJs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var cb = self.makeExecute(swaggerJs);\n  return {\n    apis: self.mapTagOperations({\n      v2OperationIdCompatibilityMode: swaggerJs.v2OperationIdCompatibilityMode,\n      spec: swaggerJs.spec,\n      cb: cb\n    })\n  };\n}\n/**\n * Iterates over a spec, creating a hash of {[tag]: { [operationId], ... }, ...}\n * with the value of calling `cb`.\n *\n * `spec` is a OAI v2.0 compliant specification object\n * `cb` is called with ({ spec, operation, path, method })\n * `defaultTag` will house all non-tagged operations\n *\n */\n\nexport function mapTagOperations(_ref2) {\n  var spec = _ref2.spec,\n      _ref2$cb = _ref2.cb,\n      cb = _ref2$cb === void 0 ? nullFn : _ref2$cb,\n      _ref2$defaultTag = _ref2.defaultTag,\n      defaultTag = _ref2$defaultTag === void 0 ? 'default' : _ref2$defaultTag,\n      v2OperationIdCompatibilityMode = _ref2.v2OperationIdCompatibilityMode;\n  var operationIdCounter = {};\n  var tagOperations = {}; // Will house all tags + operations\n\n  eachOperation(spec, function (_ref3) {\n    var pathName = _ref3.pathName,\n        method = _ref3.method,\n        operation = _ref3.operation;\n    var tags = operation.tags ? normalizeArray(operation.tags) : [defaultTag];\n    tags.forEach(function (tag) {\n      if (typeof tag !== 'string') {\n        return;\n      }\n\n      tagOperations[tag] = tagOperations[tag] || {};\n      var tagObj = tagOperations[tag];\n      var id = opId(operation, pathName, method, {\n        v2OperationIdCompatibilityMode: v2OperationIdCompatibilityMode\n      });\n      var cbResult = cb({\n        spec: spec,\n        pathName: pathName,\n        method: method,\n        operation: operation,\n        operationId: id\n      });\n\n      if (operationIdCounter[id]) {\n        var _context;\n\n        operationIdCounter[id] += 1;\n        tagObj[_concatInstanceProperty(_context = \"\".concat(id)).call(_context, operationIdCounter[id])] = cbResult;\n      } else if (typeof tagObj[id] !== 'undefined') {\n        var _context2, _context3;\n\n        // Bump counter ( for this operationId )\n        var originalCounterValue = operationIdCounter[id] || 1;\n        operationIdCounter[id] = originalCounterValue + 1; // Append _x to the operationId\n\n        tagObj[_concatInstanceProperty(_context2 = \"\".concat(id)).call(_context2, operationIdCounter[id])] = cbResult; // Rename the first operationId\n\n        var temp = tagObj[id];\n        delete tagObj[id];\n        tagObj[_concatInstanceProperty(_context3 = \"\".concat(id)).call(_context3, originalCounterValue)] = temp;\n      } else {\n        // Assign callback result ( usually a bound function )\n        tagObj[id] = cbResult;\n      }\n    });\n  });\n  return tagOperations;\n}"]},"metadata":{},"sourceType":"module"}