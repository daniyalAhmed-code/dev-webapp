{"ast":null,"code":"// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from'react';import{Grid,Header,Popup,Loader,Message,List,Divider}from'semantic-ui-react';import Chart from'chart.js';import{fetchUsage,mapUsageByDate}from'services/api-catalog';import{toTitleCase}from'services/misc';import{observer}from'mobx-react';import{store}from'services/state';import _ from'lodash';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function loadUsage(usagePlan,canvasId){fetchUsage(usagePlan.id).then(result=>{const data=mapUsageByDate(result.data,'used');const ctx=document.getElementById(canvasId);const oldDataString=JSON.stringify(_.get(usagePlan,'usage.data',{}));const newDataString=JSON.stringify(data);if(oldDataString!==newDataString){usagePlan.usage={data};}const labels=data.map(d=>new Date(d[0]).toLocaleDateString('en-US',{weekday:'short',year:'numeric',month:'short',day:'numeric'}));const used=data.map(d=>d[1]);const remaining=data.map(d=>d[2]);const max=Math.max(...used,...remaining);const chartConfig={type:'line',data:{labels,datasets:[{label:'Requests used'+(usagePlan.quota?\" (per \".concat(toTitleCase(usagePlan.quota.period),\")\"):''),data:used,lineTension:0,backgroundColor:'#00bfff',borderColor:'#00bfff',pointBackgroundColor:'transparent',pointBorderColor:'transparent',borderWidth:2,pointRadius:10,pointHoverRadius:10},{label:'Remaining requests'+(usagePlan.quota?\" (per \".concat(toTitleCase(usagePlan.quota.period),\")\"):''),data:remaining,lineTension:0,backgroundColor:'transparent',borderColor:'red',pointBackgroundColor:'transparent',pointBorderColor:'transparent',borderWidth:2,pointRadius:10,pointHoverRadius:10}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true,suggestedMax:max+max*0.02}}]}}};// eslint-disable-next-line no-new\nnew Chart(ctx,chartConfig);}).catch(error=>{console.error(error);if(!usagePlan.usage){usagePlan.usage={};}usagePlan.usage.error=error;});}export default observer(()=>{return/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid.Row,{children:/*#__PURE__*/_jsx(Grid.Column,{style:{paddingTop:\"40px\"},children:\"Dashboard\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Grid.Row,{children:store.usagePlans.filter(usagePlan=>usagePlan.subscribed&&usagePlan.apis.length).map((usagePlan,index)=>{const canvasId=\"api-usage-chart-container-\".concat(usagePlan.id)+index;loadUsage(usagePlan,canvasId);return/*#__PURE__*/_jsxs(Grid.Column,{width:16,style:{marginBottom:\"40px\"},children:[/*#__PURE__*/_jsx(Title,{apis:usagePlan.apis}),usagePlan.throttle&&/*#__PURE__*/_jsx(Message,{info:true,children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Requests limited to \",usagePlan.throttle.rateLimit,\" per second, and \",usagePlan.throttle.burstLimit,\" in a burst.\"]})}),!usagePlan.usage?/*#__PURE__*/_jsx(Loader,{active:true}):usagePlan.error?/*#__PURE__*/_jsx(Message,{error:true,content:usagePlan.error.toString()}):null,/*#__PURE__*/_jsx(\"canvas\",{id:canvasId})]},usagePlan.id);})})]});});const Title=_ref=>{let{apis}=_ref;const firstApiName=apis[0].swagger.info.title;const apiList=/*#__PURE__*/_jsx(List,{children:apis.reduce((acc,api)=>acc.concat(/*#__PURE__*/_jsx(List.Item,{children:api.swagger.info.title},api.id)),[])});const extraApiCount=apis.length-1;return/*#__PURE__*/_jsxs(Header,{size:\"medium\",children:[\"Usage for \",extraApiCount?/*#__PURE__*/_jsx(Popup,{trigger:/*#__PURE__*/_jsxs(\"p\",{style:{cursor:'pointer'},children:[firstApiName,\" and \",extraApiCount,\" more...\"]}),content:apiList,on:['hover','click'],position:\"right center\"}):firstApiName]});};","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/src/pages/Dashboard.jsx"],"names":["React","Grid","Header","Popup","Loader","Message","List","Divider","Chart","fetchUsage","mapUsageByDate","toTitleCase","observer","store","_","loadUsage","usagePlan","canvasId","id","then","result","data","ctx","document","getElementById","oldDataString","JSON","stringify","get","newDataString","usage","labels","map","d","Date","toLocaleDateString","weekday","year","month","day","used","remaining","max","Math","chartConfig","type","datasets","label","quota","period","lineTension","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","borderWidth","pointRadius","pointHoverRadius","options","scales","yAxes","ticks","beginAtZero","suggestedMax","catch","error","console","paddingTop","usagePlans","filter","subscribed","apis","length","index","marginBottom","throttle","rateLimit","burstLimit","toString","Title","firstApiName","swagger","info","title","apiList","reduce","acc","api","concat","extraApiCount","cursor"],"mappings":"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","sourcesContent":["// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\nimport { Grid, Header, Popup, Loader, Message, List, Divider } from 'semantic-ui-react'\n\nimport Chart from 'chart.js'\nimport { fetchUsage, mapUsageByDate } from 'services/api-catalog'\nimport { toTitleCase } from 'services/misc'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nfunction loadUsage (usagePlan, canvasId) {\n  fetchUsage(usagePlan.id)\n    .then((result) => {\n      const data = mapUsageByDate(result.data, 'used')\n      const ctx = document.getElementById(canvasId)\n\n      const oldDataString = JSON.stringify(_.get(usagePlan, 'usage.data', {}))\n      const newDataString = JSON.stringify(data)\n\n      if (oldDataString !== newDataString) { usagePlan.usage = { data } }\n\n      const labels = data.map(d => new Date(d[0]).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }))\n      const used = data.map(d => d[1])\n      const remaining = data.map(d => d[2])\n      const max = Math.max(...used, ...remaining)\n\n      const chartConfig = {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: 'Requests used' + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: used,\n              lineTension: 0,\n              backgroundColor: '#00bfff',\n              borderColor: '#00bfff',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n\n            },\n            {\n              label: 'Remaining requests' + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: remaining,\n              lineTension: 0,\n              backgroundColor: 'transparent',\n              borderColor: 'red',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n            }\n          ]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                suggestedMax: max + (max * 0.02)\n              }\n            }]\n          }\n        }\n      }\n\n      // eslint-disable-next-line no-new\n      new Chart(ctx, chartConfig)\n    })\n    .catch((error) => {\n      console.error(error)\n      if (!usagePlan.usage) { usagePlan.usage = { } }\n\n      usagePlan.usage.error = error\n    })\n}\n\nexport default observer(() => {\n  return (\n    <Grid container>\n      <Grid.Row>\n        <Grid.Column style={{ paddingTop: \"40px\" }}>\n          {/* <Header size='medium'>API Key</Header>\n          {\n            store.apiKey\n              ? (\n                <code style={{\n                  background: 'black',\n                  border: '1px solid gray',\n                  padding: '7px 8px',\n                  color: 'lightgray',\n                  borderRadius: '5px'\n                }}\n                >\n                  {store.apiKey}\n                  \n                </code>\n              )\n              // Note: this should be the same size as the text\n              : <Loader active inline size='tiny'>\n                {store.apiKeyFetchFailed ? <>\n                  Please wait a minute and try refreshing. If this doesn't work, please contact\n                  the admin for assistance.\n                </> : null}\n              </Loader>\n          } */}\n          Dashboard\n        </Grid.Column>\n      </Grid.Row>\n      <Divider />\n      <Grid.Row>\n        {store.usagePlans\n          .filter((usagePlan) => usagePlan.subscribed && usagePlan.apis.length)\n          .map((usagePlan, index) => {\n            const canvasId = `api-usage-chart-container-${usagePlan.id}` + index\n\n            loadUsage(usagePlan, canvasId)\n\n            return (\n              <Grid.Column\n                width={16}\n                key={usagePlan.id}\n                style={{ marginBottom: \"40px\" }}\n              >\n                <Title apis={usagePlan.apis} />\n                {usagePlan.throttle && (\n                  <Message info>\n                    <p>\n                      Requests limited to {usagePlan.throttle.rateLimit} per\n                      second, and {usagePlan.throttle.burstLimit} in a burst.\n                    </p>\n                  </Message>\n                )}\n                {!usagePlan.usage ? (\n                  <Loader active />\n                ) : usagePlan.error ? (\n                  <Message error content={usagePlan.error.toString()} />\n                ) : null}\n                <canvas id={canvasId} />\n              </Grid.Column>\n            )\n          })}\n      </Grid.Row>\n    </Grid>\n  )\n})\n\nconst Title = ({ apis }) => {\n  const firstApiName = apis[0].swagger.info.title\n\n  const apiList = (\n    <List>\n      {apis.reduce((acc, api) => acc.concat(\n        <List.Item key={api.id}>{api.swagger.info.title}</List.Item>\n      ), [])}\n    </List>\n  )\n\n  const extraApiCount = apis.length - 1\n\n  return (\n    <Header size='medium'>\n      Usage for {extraApiCount ? (\n        <Popup\n          trigger={<p style={{ cursor: 'pointer' }}>{firstApiName} and {extraApiCount} more...</p>}\n          content={apiList}\n          on={['hover', 'click']}\n          position='right center'\n        />\n      ) : (\n        firstApiName\n      )}\n    </Header>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}