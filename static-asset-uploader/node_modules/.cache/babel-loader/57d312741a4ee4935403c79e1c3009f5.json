{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime-corejs3/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs3/helpers/createClass\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\n\nvar ContextTree = /*#__PURE__*/function () {\n  function ContextTree(value) {\n    _classCallCheck(this, ContextTree);\n\n    this.root = createNode(value || {});\n  }\n\n  _createClass(ContextTree, [{\n    key: \"set\",\n    value: function set(path, value) {\n      var parent = this.getParent(path, true);\n\n      if (!parent) {\n        updateNode(this.root, value, null);\n        return;\n      }\n\n      var key = path[path.length - 1];\n      var children = parent.children;\n\n      if (children[key]) {\n        updateNode(children[key], value, parent);\n        return;\n      }\n\n      children[key] = createNode(value, parent);\n    } // Get the \"best\" node (node or nearest parent) and return its value.\n\n  }, {\n    key: \"get\",\n    value: function get(path) {\n      path = path || [];\n\n      if (path.length < 1) {\n        return this.root.value;\n      }\n\n      var branch = this.root;\n      var child;\n      var token;\n\n      for (var i = 0; i < path.length; i += 1) {\n        token = path[i];\n        child = branch.children;\n\n        if (!child[token]) {\n          break;\n        }\n\n        branch = child[token];\n      }\n\n      return branch && branch.protoValue;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent(path, ensureExists) {\n      if (!path || path.length < 1) {\n        return null;\n      }\n\n      if (path.length < 2) {\n        return this.root;\n      }\n\n      return _sliceInstanceProperty(path).call(path, 0, -1).reduce(function (branch, token) {\n        if (!branch) {\n          return branch;\n        }\n\n        var children = branch.children;\n\n        if (!children[token] && ensureExists) {\n          children[token] = createNode(null, branch);\n        }\n\n        return children[token];\n      }, this.root);\n    }\n  }]);\n\n  return ContextTree;\n}(); // =========================\n// Utilities\n// =========================\n\n\nexport { ContextTree as default };\n\nfunction createNode(value, parent) {\n  return updateNode({\n    children: {}\n  }, value, parent);\n}\n\nfunction updateNode(node, value, parent) {\n  node.value = value || {};\n  node.protoValue = parent ? _objectSpread(_objectSpread({}, parent.protoValue), node.value) : node.value;\n\n  _Object$keys(node.children).forEach(function (prop) {\n    var child = node.children[prop];\n    node.children[prop] = updateNode(child, child.value, node);\n  });\n\n  return node;\n}","map":{"version":3,"sources":["/home/daniyal/Downloads/vap-webapp (1)/vap-webapp/web-content/static-asset-uploader/node_modules/swagger-client/es/specmap/lib/context-tree.js"],"names":["_objectSpread","_classCallCheck","_createClass","_sliceInstanceProperty","_Object$keys","ContextTree","value","root","createNode","key","set","path","parent","getParent","updateNode","length","children","get","branch","child","token","i","protoValue","ensureExists","call","reduce","default","node","forEach","prop"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime-corejs3/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime-corejs3/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs3/helpers/createClass\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";\n\nvar ContextTree = /*#__PURE__*/function () {\n  function ContextTree(value) {\n    _classCallCheck(this, ContextTree);\n\n    this.root = createNode(value || {});\n  }\n\n  _createClass(ContextTree, [{\n    key: \"set\",\n    value: function set(path, value) {\n      var parent = this.getParent(path, true);\n\n      if (!parent) {\n        updateNode(this.root, value, null);\n        return;\n      }\n\n      var key = path[path.length - 1];\n      var children = parent.children;\n\n      if (children[key]) {\n        updateNode(children[key], value, parent);\n        return;\n      }\n\n      children[key] = createNode(value, parent);\n    } // Get the \"best\" node (node or nearest parent) and return its value.\n\n  }, {\n    key: \"get\",\n    value: function get(path) {\n      path = path || [];\n\n      if (path.length < 1) {\n        return this.root.value;\n      }\n\n      var branch = this.root;\n      var child;\n      var token;\n\n      for (var i = 0; i < path.length; i += 1) {\n        token = path[i];\n        child = branch.children;\n\n        if (!child[token]) {\n          break;\n        }\n\n        branch = child[token];\n      }\n\n      return branch && branch.protoValue;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent(path, ensureExists) {\n      if (!path || path.length < 1) {\n        return null;\n      }\n\n      if (path.length < 2) {\n        return this.root;\n      }\n\n      return _sliceInstanceProperty(path).call(path, 0, -1).reduce(function (branch, token) {\n        if (!branch) {\n          return branch;\n        }\n\n        var children = branch.children;\n\n        if (!children[token] && ensureExists) {\n          children[token] = createNode(null, branch);\n        }\n\n        return children[token];\n      }, this.root);\n    }\n  }]);\n\n  return ContextTree;\n}(); // =========================\n// Utilities\n// =========================\n\n\nexport { ContextTree as default };\n\nfunction createNode(value, parent) {\n  return updateNode({\n    children: {}\n  }, value, parent);\n}\n\nfunction updateNode(node, value, parent) {\n  node.value = value || {};\n  node.protoValue = parent ? _objectSpread(_objectSpread({}, parent.protoValue), node.value) : node.value;\n\n  _Object$keys(node.children).forEach(function (prop) {\n    var child = node.children[prop];\n    node.children[prop] = updateNode(child, child.value, node);\n  });\n\n  return node;\n}"]},"metadata":{},"sourceType":"module"}